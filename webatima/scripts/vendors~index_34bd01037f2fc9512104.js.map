{"version":3,"sources":["webpack:///(webpack)/buildin/global.js","webpack:///./node_modules/raven-js/src/utils.js","webpack:///./node_modules/raven-js/src/singleton.js","webpack:///./node_modules/raven-js/src/console.js","webpack:///./node_modules/raven-js/src/configError.js","webpack:///./node_modules/raven-js/src/raven.js","webpack:///(webpack)/buildin/amd-options.js","webpack:///(webpack)/buildin/amd-define.js","webpack:///./node_modules/file-saver/FileSaver.js"],"names":["g","this","Function","eval","e","window","module","exports","global","stringify","__webpack_require__","_window","self","isUndefined","what","isPlainObject","Object","prototype","toString","call","isString","isArray","supportsFetch","Headers","Request","Response","each","obj","callback","i","j","length","hasKey","truncate","str","max","Error","substr","object","key","hasOwnProperty","joinRegExp","patterns","pattern","sources","len","push","replace","source","RegExp","join","htmlElementAsString","elem","className","classes","attr","out","tagName","toLowerCase","id","split","attrWhitelist","getAttribute","isOnlyOneTruthy","a","b","isSameStacktrace","stack1","stack2","frames1","frames","frames2","undefined","filename","lineno","colno","MAX_SERIALIZE_EXCEPTION_DEPTH","MAX_SERIALIZE_EXCEPTION_SIZE","MAX_SERIALIZE_KEYS_LENGTH","jsonSize","value","encodeURI","utf8Length","JSON","serializeValue","type","name","isObject","isError","isErrorEvent","isDOMError","isDOMException","isFunction","isEmptyObject","_","supportsErrorEvent","ErrorEvent","supportsDOMError","DOMError","supportsDOMException","DOMException","supportsReferrerPolicy","referrerPolicy","supportsPromiseRejectionEvent","PromiseRejectionEvent","wrappedCallback","data","original","normalizedData","objectMerge","obj1","obj2","objectFrozen","isFrozen","urlencode","o","pairs","encodeURIComponent","uuid4","crypto","msCrypto","getRandomValues","arr","Uint16Array","pad","num","v","c","r","Math","random","htmlTreeAsString","nextStr","height","sepLength","parentNode","reverse","isSameException","ex1","ex2","values","stacktrace","parseUrl","url","match","query","fragment","protocol","host","path","relative","fill","replacement","track","orig","__raven__","__orig__","safeJoin","input","delimiter","output","String","serializeException","ex","depth","maxSize","serialized","serializeObject","keys","reduce","acc","Array","map","val","serializeKeysForMessage","maxLength","filter","usedKeys","slice","sanitize","sanitizeKeys","safeInput","sanitizeRegExp","sanitizeMask","parse","o_O","sanitizeWorker","workerInput","k","test","RavenConstructor","_Raven","Raven","noConflict","afterLoad","Client","utils","wrapMethod","console","level","originalConsoleLevel","originalConsole","sentryLevel","args","arguments","msg","logger","extra","apply","RavenConfigError","message","constructor","TraceKit","md5","wrapConsoleMethod","dsnKeys","dsnPattern","now","Date","_document","document","_navigator","navigator","keepOriginalCallback","method","_hasJSON","_hasDocument","_hasNavigator","_lastCapturedException","_lastData","_lastEventId","_globalServer","_globalKey","_globalProject","_globalContext","_globalOptions","release","SENTRY_RELEASE","ignoreErrors","ignoreUrls","whitelistUrls","includePaths","headers","collectWindowErrors","captureUnhandledRejections","maxMessageLength","maxUrlLength","stackTraceLimit","autoBreadcrumbs","instrument","sampleRate","_fetchDefaults","keepalive","_ignoreOnError","_isRavenInstalled","_originalErrorStackTraceLimit","_originalConsole","_originalConsoleMethods","_plugins","_startTime","_wrappedBuiltIns","_breadcrumbs","_lastCapturedEvent","_keypressTimeout","_location","location","_lastHref","href","_resetBackoff","VERSION","debug","config","dsn","options","_logDebug","globalOptions","setDSN","maxBreadcrumbs","min","autoBreadcrumbDefaults","xhr","dom","sentry","instrumentDefaults","tryCatch","install","isSetup","report","subscribe","_handleOnErrorStackInfo","_attachPromiseRejectionHandler","_patchFunctionToString","_instrumentTryCatch","_instrumentBreadcrumbs","_drainPlugins","uri","_parseDSN","lastSlash","lastIndexOf","_dsn","user","_globalSecret","pass","_getGlobalServer","_globalEndpoint","context","func","wrap","_before","__raven_wrapper__","wrapped","deep","_ignoreNextOnError","captureException","property","uninstall","_detachPromiseRejectionHandler","_unpatchFunctionToString","_restoreBuiltIns","_restoreConsole","_promiseRejectionHandler","event","reason","mechanism","handled","bind","addEventListener","removeEventListener","trimHeadFrames","error","captureMessage","_getCaptureExceptionOptionsFromPlainObject","stack","computeStackTrace","_handleStackInfo","currentOptions","exKeys","sort","fingerprint","__serialized__","initialCall","fileurl","_prepareFrames","_send","captureBreadcrumb","crumb","timestamp","breadcrumbCallback","result","shift","addPlugin","plugin","pluginArgs","setUserContext","setExtraContext","_mergeContext","setTagsContext","tags","clearContext","getContext","setEnvironment","environment","setRelease","setDataCallback","dataCallback","setBreadcrumbCallback","setShouldSendCallback","shouldSendCallback","setTransport","transport","lastException","lastEventId","ravenNotConfiguredError","RavenConfig","showReportDialog","assign","eventId","encode","encodedOptions","email","globalServer","script","createElement","async","src","head","body","appendChild","setTimeout","_triggerEvent","eventType","evt","toUpperCase","createEvent","initEvent","createEventObject","dispatchEvent","fireEvent","_breadcrumbEventHandler","evtName","target","category","_keypressEventHandler","isContentEditable","timeout","clearTimeout","_captureUrlChange","from","to","parsedLoc","parsedTo","parsedFrom","_originalFunctionToString","wrappedBuiltIns","wrapTimeFn","fn","t","originalCallback","function","wrapEventTarget","proto","capture","secure","handleEvent","handler","err","before","clickHandler","keypressHandler","requestAnimationFrame","cb","eventTargets","wrapProp","prop","xhrproto","XMLHttpRequest","origOpen","indexOf","__raven_xhr","status_code","origSend","onreadystatechangeHandler","readyState","status","props","onreadystatechange","origFetch","fetchInput","fetchData","then","response","attachEvent","chrome","hasPushAndReplaceState","app","runtime","history","pushState","replaceState","oldOnPopState","onpopstate","currentHref","historyReplacementFunction","origHistFunction","log","consoleMethodCallback","builtin","installer","concat","m","exec","allowSecretKey","port","stackInfo","_processException","frame","_normalizeFrame","in_app","stackInfoUrl","normalized","line","column","prefixedMessage","exception","transaction","_trimPacket","request","Referer","breadcrumbs","_trimBreadcrumbs","urlProp","urlProps","_getHttpData","httpData","userAgent","User-Agent","referrer","_backoffDuration","_backoffStart","_shouldBackoff","_isRepeatData","current","last","_setBackoffState","retry","get","getResponseHeader","parseInt","baseData","project","platform","serverName","server_name","_sanitizeData","forEach","_sendProcessedPayload","_getUuid","allowDuplicates","event_id","auth","sentry_version","sentry_client","sentry_key","sentry_secret","_makeRequest","onSuccess","onError","opts","evaluatedHeaders","evaluatedFetchParameters","_evaluateHash","fetchParameters","defaultFetchOptions","fetchOptions","fetch","ok","XDomainRequest","onload","onerror","open","setRequestHeader","send","hash","evaluated","setUser","setReleaseContext","__webpack_amd_options__","__WEBPACK_AMD_DEFINE_RESULT__","saveAs","view","get_URL","URL","webkitURL","save_link","createElementNS","can_use_save_link","is_safari","HTMLElement","safari","is_chrome_ios","throw_outside","setImmediate","revoke","file","revokeObjectURL","remove","auto_bom","blob","Blob","fromCharCode","FileSaver","no_auto_bom","object_url","filesaver","force","dispatch_all","event_types","listener","dispatch","INIT","createObjectURL","node","download","MouseEvent","DONE","FileReader","reader","onloadend","readAsDataURL","fs_error","FS_proto","msSaveOrOpenBlob","abort","WRITING","onwritestart","onprogress","onwrite","onabort","onwriteend","content"],"mappings":"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","file":"scripts/vendors~index_34bd01037f2fc9512104.js","sourcesContent":["var g;\n\n// This works in non-strict mode\ng = (function() {\n\treturn this;\n})();\n\ntry {\n\t// This works if eval is allowed (see CSP)\n\tg = g || Function(\"return this\")() || (1, eval)(\"this\");\n} catch (e) {\n\t// This works if the window reference is available\n\tif (typeof window === \"object\") g = window;\n}\n\n// g can still be undefined, but nothing to do about it...\n// We return undefined, instead of nothing here, so it's\n// easier to handle this case. if(!global) { ...}\n\nmodule.exports = g;\n","var stringify = require('../vendor/json-stringify-safe/stringify');\n\nvar _window =\n  typeof window !== 'undefined'\n    ? window\n    : typeof global !== 'undefined'\n      ? global\n      : typeof self !== 'undefined'\n        ? self\n        : {};\n\nfunction isObject(what) {\n  return typeof what === 'object' && what !== null;\n}\n\n// Yanked from https://git.io/vS8DV re-used under CC0\n// with some tiny modifications\nfunction isError(value) {\n  switch (Object.prototype.toString.call(value)) {\n    case '[object Error]':\n      return true;\n    case '[object Exception]':\n      return true;\n    case '[object DOMException]':\n      return true;\n    default:\n      return value instanceof Error;\n  }\n}\n\nfunction isErrorEvent(value) {\n  return Object.prototype.toString.call(value) === '[object ErrorEvent]';\n}\n\nfunction isDOMError(value) {\n  return Object.prototype.toString.call(value) === '[object DOMError]';\n}\n\nfunction isDOMException(value) {\n  return Object.prototype.toString.call(value) === '[object DOMException]';\n}\n\nfunction isUndefined(what) {\n  return what === void 0;\n}\n\nfunction isFunction(what) {\n  return typeof what === 'function';\n}\n\nfunction isPlainObject(what) {\n  return Object.prototype.toString.call(what) === '[object Object]';\n}\n\nfunction isString(what) {\n  return Object.prototype.toString.call(what) === '[object String]';\n}\n\nfunction isArray(what) {\n  return Object.prototype.toString.call(what) === '[object Array]';\n}\n\nfunction isEmptyObject(what) {\n  if (!isPlainObject(what)) return false;\n\n  for (var _ in what) {\n    if (what.hasOwnProperty(_)) {\n      return false;\n    }\n  }\n  return true;\n}\n\nfunction supportsErrorEvent() {\n  try {\n    new ErrorEvent(''); // eslint-disable-line no-new\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\nfunction supportsDOMError() {\n  try {\n    new DOMError(''); // eslint-disable-line no-new\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\nfunction supportsDOMException() {\n  try {\n    new DOMException(''); // eslint-disable-line no-new\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\nfunction supportsFetch() {\n  if (!('fetch' in _window)) return false;\n\n  try {\n    new Headers(); // eslint-disable-line no-new\n    new Request(''); // eslint-disable-line no-new\n    new Response(); // eslint-disable-line no-new\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\n// Despite all stars in the sky saying that Edge supports old draft syntax, aka 'never', 'always', 'origin' and 'default\n// https://caniuse.com/#feat=referrer-policy\n// It doesn't. And it throw exception instead of ignoring this parameter...\n// REF: https://github.com/getsentry/raven-js/issues/1233\nfunction supportsReferrerPolicy() {\n  if (!supportsFetch()) return false;\n\n  try {\n    // eslint-disable-next-line no-new\n    new Request('pickleRick', {\n      referrerPolicy: 'origin'\n    });\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\nfunction supportsPromiseRejectionEvent() {\n  return typeof PromiseRejectionEvent === 'function';\n}\n\nfunction wrappedCallback(callback) {\n  function dataCallback(data, original) {\n    var normalizedData = callback(data) || data;\n    if (original) {\n      return original(normalizedData) || normalizedData;\n    }\n    return normalizedData;\n  }\n\n  return dataCallback;\n}\n\nfunction each(obj, callback) {\n  var i, j;\n\n  if (isUndefined(obj.length)) {\n    for (i in obj) {\n      if (hasKey(obj, i)) {\n        callback.call(null, i, obj[i]);\n      }\n    }\n  } else {\n    j = obj.length;\n    if (j) {\n      for (i = 0; i < j; i++) {\n        callback.call(null, i, obj[i]);\n      }\n    }\n  }\n}\n\nfunction objectMerge(obj1, obj2) {\n  if (!obj2) {\n    return obj1;\n  }\n  each(obj2, function(key, value) {\n    obj1[key] = value;\n  });\n  return obj1;\n}\n\n/**\n * This function is only used for react-native.\n * react-native freezes object that have already been sent over the\n * js bridge. We need this function in order to check if the object is frozen.\n * So it's ok that objectFrozen returns false if Object.isFrozen is not\n * supported because it's not relevant for other \"platforms\". See related issue:\n * https://github.com/getsentry/react-native-sentry/issues/57\n */\nfunction objectFrozen(obj) {\n  if (!Object.isFrozen) {\n    return false;\n  }\n  return Object.isFrozen(obj);\n}\n\nfunction truncate(str, max) {\n  if (typeof max !== 'number') {\n    throw new Error('2nd argument to `truncate` function should be a number');\n  }\n  if (typeof str !== 'string' || max === 0) {\n    return str;\n  }\n  return str.length <= max ? str : str.substr(0, max) + '\\u2026';\n}\n\n/**\n * hasKey, a better form of hasOwnProperty\n * Example: hasKey(MainHostObject, property) === true/false\n *\n * @param {Object} host object to check property\n * @param {string} key to check\n */\nfunction hasKey(object, key) {\n  return Object.prototype.hasOwnProperty.call(object, key);\n}\n\nfunction joinRegExp(patterns) {\n  // Combine an array of regular expressions and strings into one large regexp\n  // Be mad.\n  var sources = [],\n    i = 0,\n    len = patterns.length,\n    pattern;\n\n  for (; i < len; i++) {\n    pattern = patterns[i];\n    if (isString(pattern)) {\n      // If it's a string, we need to escape it\n      // Taken from: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Regular_Expressions\n      sources.push(pattern.replace(/([.*+?^=!:${}()|\\[\\]\\/\\\\])/g, '\\\\$1'));\n    } else if (pattern && pattern.source) {\n      // If it's a regexp already, we want to extract the source\n      sources.push(pattern.source);\n    }\n    // Intentionally skip other cases\n  }\n  return new RegExp(sources.join('|'), 'i');\n}\n\nfunction urlencode(o) {\n  var pairs = [];\n  each(o, function(key, value) {\n    pairs.push(encodeURIComponent(key) + '=' + encodeURIComponent(value));\n  });\n  return pairs.join('&');\n}\n\n// borrowed from https://tools.ietf.org/html/rfc3986#appendix-B\n// intentionally using regex and not <a/> href parsing trick because React Native and other\n// environments where DOM might not be available\nfunction parseUrl(url) {\n  if (typeof url !== 'string') return {};\n  var match = url.match(/^(([^:\\/?#]+):)?(\\/\\/([^\\/?#]*))?([^?#]*)(\\?([^#]*))?(#(.*))?$/);\n\n  // coerce to undefined values to empty string so we don't get 'undefined'\n  var query = match[6] || '';\n  var fragment = match[8] || '';\n  return {\n    protocol: match[2],\n    host: match[4],\n    path: match[5],\n    relative: match[5] + query + fragment // everything minus origin\n  };\n}\nfunction uuid4() {\n  var crypto = _window.crypto || _window.msCrypto;\n\n  if (!isUndefined(crypto) && crypto.getRandomValues) {\n    // Use window.crypto API if available\n    // eslint-disable-next-line no-undef\n    var arr = new Uint16Array(8);\n    crypto.getRandomValues(arr);\n\n    // set 4 in byte 7\n    arr[3] = (arr[3] & 0xfff) | 0x4000;\n    // set 2 most significant bits of byte 9 to '10'\n    arr[4] = (arr[4] & 0x3fff) | 0x8000;\n\n    var pad = function(num) {\n      var v = num.toString(16);\n      while (v.length < 4) {\n        v = '0' + v;\n      }\n      return v;\n    };\n\n    return (\n      pad(arr[0]) +\n      pad(arr[1]) +\n      pad(arr[2]) +\n      pad(arr[3]) +\n      pad(arr[4]) +\n      pad(arr[5]) +\n      pad(arr[6]) +\n      pad(arr[7])\n    );\n  } else {\n    // http://stackoverflow.com/questions/105034/how-to-create-a-guid-uuid-in-javascript/2117523#2117523\n    return 'xxxxxxxxxxxx4xxxyxxxxxxxxxxxxxxx'.replace(/[xy]/g, function(c) {\n      var r = (Math.random() * 16) | 0,\n        v = c === 'x' ? r : (r & 0x3) | 0x8;\n      return v.toString(16);\n    });\n  }\n}\n\n/**\n * Given a child DOM element, returns a query-selector statement describing that\n * and its ancestors\n * e.g. [HTMLElement] => body > div > input#foo.btn[name=baz]\n * @param elem\n * @returns {string}\n */\nfunction htmlTreeAsString(elem) {\n  /* eslint no-extra-parens:0*/\n  var MAX_TRAVERSE_HEIGHT = 5,\n    MAX_OUTPUT_LEN = 80,\n    out = [],\n    height = 0,\n    len = 0,\n    separator = ' > ',\n    sepLength = separator.length,\n    nextStr;\n\n  while (elem && height++ < MAX_TRAVERSE_HEIGHT) {\n    nextStr = htmlElementAsString(elem);\n    // bail out if\n    // - nextStr is the 'html' element\n    // - the length of the string that would be created exceeds MAX_OUTPUT_LEN\n    //   (ignore this limit if we are on the first iteration)\n    if (\n      nextStr === 'html' ||\n      (height > 1 && len + out.length * sepLength + nextStr.length >= MAX_OUTPUT_LEN)\n    ) {\n      break;\n    }\n\n    out.push(nextStr);\n\n    len += nextStr.length;\n    elem = elem.parentNode;\n  }\n\n  return out.reverse().join(separator);\n}\n\n/**\n * Returns a simple, query-selector representation of a DOM element\n * e.g. [HTMLElement] => input#foo.btn[name=baz]\n * @param HTMLElement\n * @returns {string}\n */\nfunction htmlElementAsString(elem) {\n  var out = [],\n    className,\n    classes,\n    key,\n    attr,\n    i;\n\n  if (!elem || !elem.tagName) {\n    return '';\n  }\n\n  out.push(elem.tagName.toLowerCase());\n  if (elem.id) {\n    out.push('#' + elem.id);\n  }\n\n  className = elem.className;\n  if (className && isString(className)) {\n    classes = className.split(/\\s+/);\n    for (i = 0; i < classes.length; i++) {\n      out.push('.' + classes[i]);\n    }\n  }\n  var attrWhitelist = ['type', 'name', 'title', 'alt'];\n  for (i = 0; i < attrWhitelist.length; i++) {\n    key = attrWhitelist[i];\n    attr = elem.getAttribute(key);\n    if (attr) {\n      out.push('[' + key + '=\"' + attr + '\"]');\n    }\n  }\n  return out.join('');\n}\n\n/**\n * Returns true if either a OR b is truthy, but not both\n */\nfunction isOnlyOneTruthy(a, b) {\n  return !!(!!a ^ !!b);\n}\n\n/**\n * Returns true if both parameters are undefined\n */\nfunction isBothUndefined(a, b) {\n  return isUndefined(a) && isUndefined(b);\n}\n\n/**\n * Returns true if the two input exception interfaces have the same content\n */\nfunction isSameException(ex1, ex2) {\n  if (isOnlyOneTruthy(ex1, ex2)) return false;\n\n  ex1 = ex1.values[0];\n  ex2 = ex2.values[0];\n\n  if (ex1.type !== ex2.type || ex1.value !== ex2.value) return false;\n\n  // in case both stacktraces are undefined, we can't decide so default to false\n  if (isBothUndefined(ex1.stacktrace, ex2.stacktrace)) return false;\n\n  return isSameStacktrace(ex1.stacktrace, ex2.stacktrace);\n}\n\n/**\n * Returns true if the two input stack trace interfaces have the same content\n */\nfunction isSameStacktrace(stack1, stack2) {\n  if (isOnlyOneTruthy(stack1, stack2)) return false;\n\n  var frames1 = stack1.frames;\n  var frames2 = stack2.frames;\n\n  // Exit early if stacktrace is malformed\n  if (frames1 === undefined || frames2 === undefined) return false;\n\n  // Exit early if frame count differs\n  if (frames1.length !== frames2.length) return false;\n\n  // Iterate through every frame; bail out if anything differs\n  var a, b;\n  for (var i = 0; i < frames1.length; i++) {\n    a = frames1[i];\n    b = frames2[i];\n    if (\n      a.filename !== b.filename ||\n      a.lineno !== b.lineno ||\n      a.colno !== b.colno ||\n      a['function'] !== b['function']\n    )\n      return false;\n  }\n  return true;\n}\n\n/**\n * Polyfill a method\n * @param obj object e.g. `document`\n * @param name method name present on object e.g. `addEventListener`\n * @param replacement replacement function\n * @param track {optional} record instrumentation to an array\n */\nfunction fill(obj, name, replacement, track) {\n  if (obj == null) return;\n  var orig = obj[name];\n  obj[name] = replacement(orig);\n  obj[name].__raven__ = true;\n  obj[name].__orig__ = orig;\n  if (track) {\n    track.push([obj, name, orig]);\n  }\n}\n\n/**\n * Join values in array\n * @param input array of values to be joined together\n * @param delimiter string to be placed in-between values\n * @returns {string}\n */\nfunction safeJoin(input, delimiter) {\n  if (!isArray(input)) return '';\n\n  var output = [];\n\n  for (var i = 0; i < input.length; i++) {\n    try {\n      output.push(String(input[i]));\n    } catch (e) {\n      output.push('[value cannot be serialized]');\n    }\n  }\n\n  return output.join(delimiter);\n}\n\n// Default Node.js REPL depth\nvar MAX_SERIALIZE_EXCEPTION_DEPTH = 3;\n// 50kB, as 100kB is max payload size, so half sounds reasonable\nvar MAX_SERIALIZE_EXCEPTION_SIZE = 50 * 1024;\nvar MAX_SERIALIZE_KEYS_LENGTH = 40;\n\nfunction utf8Length(value) {\n  return ~-encodeURI(value).split(/%..|./).length;\n}\n\nfunction jsonSize(value) {\n  return utf8Length(JSON.stringify(value));\n}\n\nfunction serializeValue(value) {\n  if (typeof value === 'string') {\n    var maxLength = 40;\n    return truncate(value, maxLength);\n  } else if (\n    typeof value === 'number' ||\n    typeof value === 'boolean' ||\n    typeof value === 'undefined'\n  ) {\n    return value;\n  }\n\n  var type = Object.prototype.toString.call(value);\n\n  // Node.js REPL notation\n  if (type === '[object Object]') return '[Object]';\n  if (type === '[object Array]') return '[Array]';\n  if (type === '[object Function]')\n    return value.name ? '[Function: ' + value.name + ']' : '[Function]';\n\n  return value;\n}\n\nfunction serializeObject(value, depth) {\n  if (depth === 0) return serializeValue(value);\n\n  if (isPlainObject(value)) {\n    return Object.keys(value).reduce(function(acc, key) {\n      acc[key] = serializeObject(value[key], depth - 1);\n      return acc;\n    }, {});\n  } else if (Array.isArray(value)) {\n    return value.map(function(val) {\n      return serializeObject(val, depth - 1);\n    });\n  }\n\n  return serializeValue(value);\n}\n\nfunction serializeException(ex, depth, maxSize) {\n  if (!isPlainObject(ex)) return ex;\n\n  depth = typeof depth !== 'number' ? MAX_SERIALIZE_EXCEPTION_DEPTH : depth;\n  maxSize = typeof depth !== 'number' ? MAX_SERIALIZE_EXCEPTION_SIZE : maxSize;\n\n  var serialized = serializeObject(ex, depth);\n\n  if (jsonSize(stringify(serialized)) > maxSize) {\n    return serializeException(ex, depth - 1);\n  }\n\n  return serialized;\n}\n\nfunction serializeKeysForMessage(keys, maxLength) {\n  if (typeof keys === 'number' || typeof keys === 'string') return keys.toString();\n  if (!Array.isArray(keys)) return '';\n\n  keys = keys.filter(function(key) {\n    return typeof key === 'string';\n  });\n  if (keys.length === 0) return '[object has no keys]';\n\n  maxLength = typeof maxLength !== 'number' ? MAX_SERIALIZE_KEYS_LENGTH : maxLength;\n  if (keys[0].length >= maxLength) return keys[0];\n\n  for (var usedKeys = keys.length; usedKeys > 0; usedKeys--) {\n    var serialized = keys.slice(0, usedKeys).join(', ');\n    if (serialized.length > maxLength) continue;\n    if (usedKeys === keys.length) return serialized;\n    return serialized + '\\u2026';\n  }\n\n  return '';\n}\n\nfunction sanitize(input, sanitizeKeys) {\n  if (!isArray(sanitizeKeys) || (isArray(sanitizeKeys) && sanitizeKeys.length === 0))\n    return input;\n\n  var sanitizeRegExp = joinRegExp(sanitizeKeys);\n  var sanitizeMask = '********';\n  var safeInput;\n\n  try {\n    safeInput = JSON.parse(stringify(input));\n  } catch (o_O) {\n    return input;\n  }\n\n  function sanitizeWorker(workerInput) {\n    if (isArray(workerInput)) {\n      return workerInput.map(function(val) {\n        return sanitizeWorker(val);\n      });\n    }\n\n    if (isPlainObject(workerInput)) {\n      return Object.keys(workerInput).reduce(function(acc, k) {\n        if (sanitizeRegExp.test(k)) {\n          acc[k] = sanitizeMask;\n        } else {\n          acc[k] = sanitizeWorker(workerInput[k]);\n        }\n        return acc;\n      }, {});\n    }\n\n    return workerInput;\n  }\n\n  return sanitizeWorker(safeInput);\n}\n\nmodule.exports = {\n  isObject: isObject,\n  isError: isError,\n  isErrorEvent: isErrorEvent,\n  isDOMError: isDOMError,\n  isDOMException: isDOMException,\n  isUndefined: isUndefined,\n  isFunction: isFunction,\n  isPlainObject: isPlainObject,\n  isString: isString,\n  isArray: isArray,\n  isEmptyObject: isEmptyObject,\n  supportsErrorEvent: supportsErrorEvent,\n  supportsDOMError: supportsDOMError,\n  supportsDOMException: supportsDOMException,\n  supportsFetch: supportsFetch,\n  supportsReferrerPolicy: supportsReferrerPolicy,\n  supportsPromiseRejectionEvent: supportsPromiseRejectionEvent,\n  wrappedCallback: wrappedCallback,\n  each: each,\n  objectMerge: objectMerge,\n  truncate: truncate,\n  objectFrozen: objectFrozen,\n  hasKey: hasKey,\n  joinRegExp: joinRegExp,\n  urlencode: urlencode,\n  uuid4: uuid4,\n  htmlTreeAsString: htmlTreeAsString,\n  htmlElementAsString: htmlElementAsString,\n  isSameException: isSameException,\n  isSameStacktrace: isSameStacktrace,\n  parseUrl: parseUrl,\n  fill: fill,\n  safeJoin: safeJoin,\n  serializeException: serializeException,\n  serializeKeysForMessage: serializeKeysForMessage,\n  sanitize: sanitize\n};\n","/**\n * Enforces a single instance of the Raven client, and the\n * main entry point for Raven. If you are a consumer of the\n * Raven library, you SHOULD load this file (vs raven.js).\n **/\n\nvar RavenConstructor = require('./raven');\n\n// This is to be defensive in environments where window does not exist (see https://github.com/getsentry/raven-js/pull/785)\nvar _window =\n  typeof window !== 'undefined'\n    ? window\n    : typeof global !== 'undefined' ? global : typeof self !== 'undefined' ? self : {};\nvar _Raven = _window.Raven;\n\nvar Raven = new RavenConstructor();\n\n/*\n * Allow multiple versions of Raven to be installed.\n * Strip Raven from the global context and returns the instance.\n *\n * @return {Raven}\n */\nRaven.noConflict = function() {\n  _window.Raven = _Raven;\n  return Raven;\n};\n\nRaven.afterLoad();\n\nmodule.exports = Raven;\n\n/**\n * DISCLAIMER:\n *\n * Expose `Client` constructor for cases where user want to track multiple \"sub-applications\" in one larger app.\n * It's not meant to be used by a wide audience, so pleaaase make sure that you know what you're doing before using it.\n * Accidentally calling `install` multiple times, may result in an unexpected behavior that's very hard to debug.\n *\n * It's called `Client' to be in-line with Raven Node implementation.\n *\n * HOWTO:\n *\n * import Raven from 'raven-js';\n *\n * const someAppReporter = new Raven.Client();\n * const someOtherAppReporter = new Raven.Client();\n *\n * someAppReporter.config('__DSN__', {\n *   ...config goes here\n * });\n *\n * someOtherAppReporter.config('__OTHER_DSN__', {\n *   ...config goes here\n * });\n *\n * someAppReporter.captureMessage(...);\n * someAppReporter.captureException(...);\n * someAppReporter.captureBreadcrumb(...);\n *\n * someOtherAppReporter.captureMessage(...);\n * someOtherAppReporter.captureException(...);\n * someOtherAppReporter.captureBreadcrumb(...);\n *\n * It should \"just work\".\n */\nmodule.exports.Client = RavenConstructor;\n","var utils = require('./utils');\n\nvar wrapMethod = function(console, level, callback) {\n  var originalConsoleLevel = console[level];\n  var originalConsole = console;\n\n  if (!(level in console)) {\n    return;\n  }\n\n  var sentryLevel = level === 'warn' ? 'warning' : level;\n\n  console[level] = function() {\n    var args = [].slice.call(arguments);\n\n    var msg = utils.safeJoin(args, ' ');\n    var data = {level: sentryLevel, logger: 'console', extra: {arguments: args}};\n\n    if (level === 'assert') {\n      if (args[0] === false) {\n        // Default browsers message\n        msg =\n          'Assertion failed: ' + (utils.safeJoin(args.slice(1), ' ') || 'console.assert');\n        data.extra.arguments = args.slice(1);\n        callback && callback(msg, data);\n      }\n    } else {\n      callback && callback(msg, data);\n    }\n\n    // this fails for some browsers. :(\n    if (originalConsoleLevel) {\n      // IE9 doesn't allow calling apply on console functions directly\n      // See: https://stackoverflow.com/questions/5472938/does-ie9-support-console-log-and-is-it-a-real-function#answer-5473193\n      Function.prototype.apply.call(originalConsoleLevel, originalConsole, args);\n    }\n  };\n};\n\nmodule.exports = {\n  wrapMethod: wrapMethod\n};\n","function RavenConfigError(message) {\n  this.name = 'RavenConfigError';\n  this.message = message;\n}\nRavenConfigError.prototype = new Error();\nRavenConfigError.prototype.constructor = RavenConfigError;\n\nmodule.exports = RavenConfigError;\n","/*global XDomainRequest:false */\n\nvar TraceKit = require('../vendor/TraceKit/tracekit');\nvar stringify = require('../vendor/json-stringify-safe/stringify');\nvar md5 = require('../vendor/md5/md5');\nvar RavenConfigError = require('./configError');\n\nvar utils = require('./utils');\nvar isErrorEvent = utils.isErrorEvent;\nvar isDOMError = utils.isDOMError;\nvar isDOMException = utils.isDOMException;\nvar isError = utils.isError;\nvar isObject = utils.isObject;\nvar isPlainObject = utils.isPlainObject;\nvar isUndefined = utils.isUndefined;\nvar isFunction = utils.isFunction;\nvar isString = utils.isString;\nvar isArray = utils.isArray;\nvar isEmptyObject = utils.isEmptyObject;\nvar each = utils.each;\nvar objectMerge = utils.objectMerge;\nvar truncate = utils.truncate;\nvar objectFrozen = utils.objectFrozen;\nvar hasKey = utils.hasKey;\nvar joinRegExp = utils.joinRegExp;\nvar urlencode = utils.urlencode;\nvar uuid4 = utils.uuid4;\nvar htmlTreeAsString = utils.htmlTreeAsString;\nvar isSameException = utils.isSameException;\nvar isSameStacktrace = utils.isSameStacktrace;\nvar parseUrl = utils.parseUrl;\nvar fill = utils.fill;\nvar supportsFetch = utils.supportsFetch;\nvar supportsReferrerPolicy = utils.supportsReferrerPolicy;\nvar serializeKeysForMessage = utils.serializeKeysForMessage;\nvar serializeException = utils.serializeException;\nvar sanitize = utils.sanitize;\n\nvar wrapConsoleMethod = require('./console').wrapMethod;\n\nvar dsnKeys = 'source protocol user pass host port path'.split(' '),\n  dsnPattern = /^(?:(\\w+):)?\\/\\/(?:(\\w+)(:\\w+)?@)?([\\w\\.-]+)(?::(\\d+))?(\\/.*)/;\n\nfunction now() {\n  return +new Date();\n}\n\n// This is to be defensive in environments where window does not exist (see https://github.com/getsentry/raven-js/pull/785)\nvar _window =\n  typeof window !== 'undefined'\n    ? window\n    : typeof global !== 'undefined' ? global : typeof self !== 'undefined' ? self : {};\nvar _document = _window.document;\nvar _navigator = _window.navigator;\n\nfunction keepOriginalCallback(original, callback) {\n  return isFunction(callback)\n    ? function(data) {\n        return callback(data, original);\n      }\n    : callback;\n}\n\n// First, check for JSON support\n// If there is no JSON, we no-op the core features of Raven\n// since JSON is required to encode the payload\nfunction Raven() {\n  this._hasJSON = !!(typeof JSON === 'object' && JSON.stringify);\n  // Raven can run in contexts where there's no document (react-native)\n  this._hasDocument = !isUndefined(_document);\n  this._hasNavigator = !isUndefined(_navigator);\n  this._lastCapturedException = null;\n  this._lastData = null;\n  this._lastEventId = null;\n  this._globalServer = null;\n  this._globalKey = null;\n  this._globalProject = null;\n  this._globalContext = {};\n  this._globalOptions = {\n    // SENTRY_RELEASE can be injected by https://github.com/getsentry/sentry-webpack-plugin\n    release: _window.SENTRY_RELEASE && _window.SENTRY_RELEASE.id,\n    logger: 'javascript',\n    ignoreErrors: [],\n    ignoreUrls: [],\n    whitelistUrls: [],\n    includePaths: [],\n    headers: null,\n    collectWindowErrors: true,\n    captureUnhandledRejections: true,\n    maxMessageLength: 0,\n    // By default, truncates URL values to 250 chars\n    maxUrlLength: 250,\n    stackTraceLimit: 50,\n    autoBreadcrumbs: true,\n    instrument: true,\n    sampleRate: 1,\n    sanitizeKeys: []\n  };\n  this._fetchDefaults = {\n    method: 'POST',\n    keepalive: true,\n    // Despite all stars in the sky saying that Edge supports old draft syntax, aka 'never', 'always', 'origin' and 'default\n    // https://caniuse.com/#feat=referrer-policy\n    // It doesn't. And it throw exception instead of ignoring this parameter...\n    // REF: https://github.com/getsentry/raven-js/issues/1233\n    referrerPolicy: supportsReferrerPolicy() ? 'origin' : ''\n  };\n  this._ignoreOnError = 0;\n  this._isRavenInstalled = false;\n  this._originalErrorStackTraceLimit = Error.stackTraceLimit;\n  // capture references to window.console *and* all its methods first\n  // before the console plugin has a chance to monkey patch\n  this._originalConsole = _window.console || {};\n  this._originalConsoleMethods = {};\n  this._plugins = [];\n  this._startTime = now();\n  this._wrappedBuiltIns = [];\n  this._breadcrumbs = [];\n  this._lastCapturedEvent = null;\n  this._keypressTimeout;\n  this._location = _window.location;\n  this._lastHref = this._location && this._location.href;\n  this._resetBackoff();\n\n  // eslint-disable-next-line guard-for-in\n  for (var method in this._originalConsole) {\n    this._originalConsoleMethods[method] = this._originalConsole[method];\n  }\n}\n\n/*\n * The core Raven singleton\n *\n * @this {Raven}\n */\n\nRaven.prototype = {\n  // Hardcode version string so that raven source can be loaded directly via\n  // webpack (using a build step causes webpack #1617). Grunt verifies that\n  // this value matches package.json during build.\n  //   See: https://github.com/getsentry/raven-js/issues/465\n  VERSION: '3.26.4',\n\n  debug: false,\n\n  TraceKit: TraceKit, // alias to TraceKit\n\n  /*\n     * Configure Raven with a DSN and extra options\n     *\n     * @param {string} dsn The public Sentry DSN\n     * @param {object} options Set of global options [optional]\n     * @return {Raven}\n     */\n  config: function(dsn, options) {\n    var self = this;\n\n    if (self._globalServer) {\n      this._logDebug('error', 'Error: Raven has already been configured');\n      return self;\n    }\n    if (!dsn) return self;\n\n    var globalOptions = self._globalOptions;\n\n    // merge in options\n    if (options) {\n      each(options, function(key, value) {\n        // tags and extra are special and need to be put into context\n        if (key === 'tags' || key === 'extra' || key === 'user') {\n          self._globalContext[key] = value;\n        } else {\n          globalOptions[key] = value;\n        }\n      });\n    }\n\n    self.setDSN(dsn);\n\n    // \"Script error.\" is hard coded into browsers for errors that it can't read.\n    // this is the result of a script being pulled in from an external domain and CORS.\n    globalOptions.ignoreErrors.push(/^Script error\\.?$/);\n    globalOptions.ignoreErrors.push(/^Javascript error: Script error\\.? on line 0$/);\n\n    // join regexp rules into one big rule\n    globalOptions.ignoreErrors = joinRegExp(globalOptions.ignoreErrors);\n    globalOptions.ignoreUrls = globalOptions.ignoreUrls.length\n      ? joinRegExp(globalOptions.ignoreUrls)\n      : false;\n    globalOptions.whitelistUrls = globalOptions.whitelistUrls.length\n      ? joinRegExp(globalOptions.whitelistUrls)\n      : false;\n    globalOptions.includePaths = joinRegExp(globalOptions.includePaths);\n    globalOptions.maxBreadcrumbs = Math.max(\n      0,\n      Math.min(globalOptions.maxBreadcrumbs || 100, 100)\n    ); // default and hard limit is 100\n\n    var autoBreadcrumbDefaults = {\n      xhr: true,\n      console: true,\n      dom: true,\n      location: true,\n      sentry: true\n    };\n\n    var autoBreadcrumbs = globalOptions.autoBreadcrumbs;\n    if ({}.toString.call(autoBreadcrumbs) === '[object Object]') {\n      autoBreadcrumbs = objectMerge(autoBreadcrumbDefaults, autoBreadcrumbs);\n    } else if (autoBreadcrumbs !== false) {\n      autoBreadcrumbs = autoBreadcrumbDefaults;\n    }\n    globalOptions.autoBreadcrumbs = autoBreadcrumbs;\n\n    var instrumentDefaults = {\n      tryCatch: true\n    };\n\n    var instrument = globalOptions.instrument;\n    if ({}.toString.call(instrument) === '[object Object]') {\n      instrument = objectMerge(instrumentDefaults, instrument);\n    } else if (instrument !== false) {\n      instrument = instrumentDefaults;\n    }\n    globalOptions.instrument = instrument;\n\n    TraceKit.collectWindowErrors = !!globalOptions.collectWindowErrors;\n\n    // return for chaining\n    return self;\n  },\n\n  /*\n     * Installs a global window.onerror error handler\n     * to capture and report uncaught exceptions.\n     * At this point, install() is required to be called due\n     * to the way TraceKit is set up.\n     *\n     * @return {Raven}\n     */\n  install: function() {\n    var self = this;\n    if (self.isSetup() && !self._isRavenInstalled) {\n      TraceKit.report.subscribe(function() {\n        self._handleOnErrorStackInfo.apply(self, arguments);\n      });\n\n      if (self._globalOptions.captureUnhandledRejections) {\n        self._attachPromiseRejectionHandler();\n      }\n\n      self._patchFunctionToString();\n\n      if (self._globalOptions.instrument && self._globalOptions.instrument.tryCatch) {\n        self._instrumentTryCatch();\n      }\n\n      if (self._globalOptions.autoBreadcrumbs) self._instrumentBreadcrumbs();\n\n      // Install all of the plugins\n      self._drainPlugins();\n\n      self._isRavenInstalled = true;\n    }\n\n    Error.stackTraceLimit = self._globalOptions.stackTraceLimit;\n    return this;\n  },\n\n  /*\n     * Set the DSN (can be called multiple time unlike config)\n     *\n     * @param {string} dsn The public Sentry DSN\n     */\n  setDSN: function(dsn) {\n    var self = this,\n      uri = self._parseDSN(dsn),\n      lastSlash = uri.path.lastIndexOf('/'),\n      path = uri.path.substr(1, lastSlash);\n\n    self._dsn = dsn;\n    self._globalKey = uri.user;\n    self._globalSecret = uri.pass && uri.pass.substr(1);\n    self._globalProject = uri.path.substr(lastSlash + 1);\n\n    self._globalServer = self._getGlobalServer(uri);\n\n    self._globalEndpoint =\n      self._globalServer + '/' + path + 'api/' + self._globalProject + '/store/';\n\n    // Reset backoff state since we may be pointing at a\n    // new project/server\n    this._resetBackoff();\n  },\n\n  /*\n     * Wrap code within a context so Raven can capture errors\n     * reliably across domains that is executed immediately.\n     *\n     * @param {object} options A specific set of options for this context [optional]\n     * @param {function} func The callback to be immediately executed within the context\n     * @param {array} args An array of arguments to be called with the callback [optional]\n     */\n  context: function(options, func, args) {\n    if (isFunction(options)) {\n      args = func || [];\n      func = options;\n      options = {};\n    }\n\n    return this.wrap(options, func).apply(this, args);\n  },\n\n  /*\n     * Wrap code within a context and returns back a new function to be executed\n     *\n     * @param {object} options A specific set of options for this context [optional]\n     * @param {function} func The function to be wrapped in a new context\n     * @param {function} _before A function to call before the try/catch wrapper [optional, private]\n     * @return {function} The newly wrapped functions with a context\n     */\n  wrap: function(options, func, _before) {\n    var self = this;\n    // 1 argument has been passed, and it's not a function\n    // so just return it\n    if (isUndefined(func) && !isFunction(options)) {\n      return options;\n    }\n\n    // options is optional\n    if (isFunction(options)) {\n      func = options;\n      options = undefined;\n    }\n\n    // At this point, we've passed along 2 arguments, and the second one\n    // is not a function either, so we'll just return the second argument.\n    if (!isFunction(func)) {\n      return func;\n    }\n\n    // We don't wanna wrap it twice!\n    try {\n      if (func.__raven__) {\n        return func;\n      }\n\n      // If this has already been wrapped in the past, return that\n      if (func.__raven_wrapper__) {\n        return func.__raven_wrapper__;\n      }\n    } catch (e) {\n      // Just accessing custom props in some Selenium environments\n      // can cause a \"Permission denied\" exception (see raven-js#495).\n      // Bail on wrapping and return the function as-is (defers to window.onerror).\n      return func;\n    }\n\n    function wrapped() {\n      var args = [],\n        i = arguments.length,\n        deep = !options || (options && options.deep !== false);\n\n      if (_before && isFunction(_before)) {\n        _before.apply(this, arguments);\n      }\n\n      // Recursively wrap all of a function's arguments that are\n      // functions themselves.\n      while (i--) args[i] = deep ? self.wrap(options, arguments[i]) : arguments[i];\n\n      try {\n        // Attempt to invoke user-land function\n        // NOTE: If you are a Sentry user, and you are seeing this stack frame, it\n        //       means Raven caught an error invoking your application code. This is\n        //       expected behavior and NOT indicative of a bug with Raven.js.\n        return func.apply(this, args);\n      } catch (e) {\n        self._ignoreNextOnError();\n        self.captureException(e, options);\n        throw e;\n      }\n    }\n\n    // copy over properties of the old function\n    for (var property in func) {\n      if (hasKey(func, property)) {\n        wrapped[property] = func[property];\n      }\n    }\n    wrapped.prototype = func.prototype;\n\n    func.__raven_wrapper__ = wrapped;\n    // Signal that this function has been wrapped/filled already\n    // for both debugging and to prevent it to being wrapped/filled twice\n    wrapped.__raven__ = true;\n    wrapped.__orig__ = func;\n\n    return wrapped;\n  },\n\n  /**\n   * Uninstalls the global error handler.\n   *\n   * @return {Raven}\n   */\n  uninstall: function() {\n    TraceKit.report.uninstall();\n\n    this._detachPromiseRejectionHandler();\n    this._unpatchFunctionToString();\n    this._restoreBuiltIns();\n    this._restoreConsole();\n\n    Error.stackTraceLimit = this._originalErrorStackTraceLimit;\n    this._isRavenInstalled = false;\n\n    return this;\n  },\n\n  /**\n   * Callback used for `unhandledrejection` event\n   *\n   * @param {PromiseRejectionEvent} event An object containing\n   *   promise: the Promise that was rejected\n   *   reason: the value with which the Promise was rejected\n   * @return void\n   */\n  _promiseRejectionHandler: function(event) {\n    this._logDebug('debug', 'Raven caught unhandled promise rejection:', event);\n    this.captureException(event.reason, {\n      mechanism: {\n        type: 'onunhandledrejection',\n        handled: false\n      }\n    });\n  },\n\n  /**\n   * Installs the global promise rejection handler.\n   *\n   * @return {raven}\n   */\n  _attachPromiseRejectionHandler: function() {\n    this._promiseRejectionHandler = this._promiseRejectionHandler.bind(this);\n    _window.addEventListener &&\n      _window.addEventListener('unhandledrejection', this._promiseRejectionHandler);\n    return this;\n  },\n\n  /**\n   * Uninstalls the global promise rejection handler.\n   *\n   * @return {raven}\n   */\n  _detachPromiseRejectionHandler: function() {\n    _window.removeEventListener &&\n      _window.removeEventListener('unhandledrejection', this._promiseRejectionHandler);\n    return this;\n  },\n\n  /**\n   * Manually capture an exception and send it over to Sentry\n   *\n   * @param {error} ex An exception to be logged\n   * @param {object} options A specific set of options for this error [optional]\n   * @return {Raven}\n   */\n  captureException: function(ex, options) {\n    options = objectMerge({trimHeadFrames: 0}, options ? options : {});\n\n    if (isErrorEvent(ex) && ex.error) {\n      // If it is an ErrorEvent with `error` property, extract it to get actual Error\n      ex = ex.error;\n    } else if (isDOMError(ex) || isDOMException(ex)) {\n      // If it is a DOMError or DOMException (which are legacy APIs, but still supported in some browsers)\n      // then we just extract the name and message, as they don't provide anything else\n      // https://developer.mozilla.org/en-US/docs/Web/API/DOMError\n      // https://developer.mozilla.org/en-US/docs/Web/API/DOMException\n      var name = ex.name || (isDOMError(ex) ? 'DOMError' : 'DOMException');\n      var message = ex.message ? name + ': ' + ex.message : name;\n\n      return this.captureMessage(\n        message,\n        objectMerge(options, {\n          // neither DOMError or DOMException provide stack trace and we most likely wont get it this way as well\n          // but it's barely any overhead so we may at least try\n          stacktrace: true,\n          trimHeadFrames: options.trimHeadFrames + 1\n        })\n      );\n    } else if (isError(ex)) {\n      // we have a real Error object\n      ex = ex;\n    } else if (isPlainObject(ex)) {\n      // If it is plain Object, serialize it manually and extract options\n      // This will allow us to group events based on top-level keys\n      // which is much better than creating new group when any key/value change\n      options = this._getCaptureExceptionOptionsFromPlainObject(options, ex);\n      ex = new Error(options.message);\n    } else {\n      // If none of previous checks were valid, then it means that\n      // it's not a DOMError/DOMException\n      // it's not a plain Object\n      // it's not a valid ErrorEvent (one with an error property)\n      // it's not an Error\n      // So bail out and capture it as a simple message:\n      return this.captureMessage(\n        ex,\n        objectMerge(options, {\n          stacktrace: true, // if we fall back to captureMessage, default to attempting a new trace\n          trimHeadFrames: options.trimHeadFrames + 1\n        })\n      );\n    }\n\n    // Store the raw exception object for potential debugging and introspection\n    this._lastCapturedException = ex;\n\n    // TraceKit.report will re-raise any exception passed to it,\n    // which means you have to wrap it in try/catch. Instead, we\n    // can wrap it here and only re-raise if TraceKit.report\n    // raises an exception different from the one we asked to\n    // report on.\n    try {\n      var stack = TraceKit.computeStackTrace(ex);\n      this._handleStackInfo(stack, options);\n    } catch (ex1) {\n      if (ex !== ex1) {\n        throw ex1;\n      }\n    }\n\n    return this;\n  },\n\n  _getCaptureExceptionOptionsFromPlainObject: function(currentOptions, ex) {\n    var exKeys = Object.keys(ex).sort();\n    var options = objectMerge(currentOptions, {\n      message:\n        'Non-Error exception captured with keys: ' + serializeKeysForMessage(exKeys),\n      fingerprint: [md5(exKeys)],\n      extra: currentOptions.extra || {}\n    });\n    options.extra.__serialized__ = serializeException(ex);\n\n    return options;\n  },\n\n  /*\n     * Manually send a message to Sentry\n     *\n     * @param {string} msg A plain message to be captured in Sentry\n     * @param {object} options A specific set of options for this message [optional]\n     * @return {Raven}\n     */\n  captureMessage: function(msg, options) {\n    // config() automagically converts ignoreErrors from a list to a RegExp so we need to test for an\n    // early call; we'll error on the side of logging anything called before configuration since it's\n    // probably something you should see:\n    if (\n      !!this._globalOptions.ignoreErrors.test &&\n      this._globalOptions.ignoreErrors.test(msg)\n    ) {\n      return;\n    }\n\n    options = options || {};\n    msg = msg + ''; // Make sure it's actually a string\n\n    var data = objectMerge(\n      {\n        message: msg\n      },\n      options\n    );\n\n    var ex;\n    // Generate a \"synthetic\" stack trace from this point.\n    // NOTE: If you are a Sentry user, and you are seeing this stack frame, it is NOT indicative\n    //       of a bug with Raven.js. Sentry generates synthetic traces either by configuration,\n    //       or if it catches a thrown object without a \"stack\" property.\n    try {\n      throw new Error(msg);\n    } catch (ex1) {\n      ex = ex1;\n    }\n\n    // null exception name so `Error` isn't prefixed to msg\n    ex.name = null;\n    var stack = TraceKit.computeStackTrace(ex);\n\n    // stack[0] is `throw new Error(msg)` call itself, we are interested in the frame that was just before that, stack[1]\n    var initialCall = isArray(stack.stack) && stack.stack[1];\n\n    // if stack[1] is `Raven.captureException`, it means that someone passed a string to it and we redirected that call\n    // to be handled by `captureMessage`, thus `initialCall` is the 3rd one, not 2nd\n    // initialCall => captureException(string) => captureMessage(string)\n    if (initialCall && initialCall.func === 'Raven.captureException') {\n      initialCall = stack.stack[2];\n    }\n\n    var fileurl = (initialCall && initialCall.url) || '';\n\n    if (\n      !!this._globalOptions.ignoreUrls.test &&\n      this._globalOptions.ignoreUrls.test(fileurl)\n    ) {\n      return;\n    }\n\n    if (\n      !!this._globalOptions.whitelistUrls.test &&\n      !this._globalOptions.whitelistUrls.test(fileurl)\n    ) {\n      return;\n    }\n\n    // Always attempt to get stacktrace if message is empty.\n    // It's the only way to provide any helpful information to the user.\n    if (this._globalOptions.stacktrace || options.stacktrace || data.message === '') {\n      // fingerprint on msg, not stack trace (legacy behavior, could be revisited)\n      data.fingerprint = data.fingerprint == null ? msg : data.fingerprint;\n\n      options = objectMerge(\n        {\n          trimHeadFrames: 0\n        },\n        options\n      );\n      // Since we know this is a synthetic trace, the top frame (this function call)\n      // MUST be from Raven.js, so mark it for trimming\n      // We add to the trim counter so that callers can choose to trim extra frames, such\n      // as utility functions.\n      options.trimHeadFrames += 1;\n\n      var frames = this._prepareFrames(stack, options);\n      data.stacktrace = {\n        // Sentry expects frames oldest to newest\n        frames: frames.reverse()\n      };\n    }\n\n    // Make sure that fingerprint is always wrapped in an array\n    if (data.fingerprint) {\n      data.fingerprint = isArray(data.fingerprint)\n        ? data.fingerprint\n        : [data.fingerprint];\n    }\n\n    // Fire away!\n    this._send(data);\n\n    return this;\n  },\n\n  captureBreadcrumb: function(obj) {\n    var crumb = objectMerge(\n      {\n        timestamp: now() / 1000\n      },\n      obj\n    );\n\n    if (isFunction(this._globalOptions.breadcrumbCallback)) {\n      var result = this._globalOptions.breadcrumbCallback(crumb);\n\n      if (isObject(result) && !isEmptyObject(result)) {\n        crumb = result;\n      } else if (result === false) {\n        return this;\n      }\n    }\n\n    this._breadcrumbs.push(crumb);\n    if (this._breadcrumbs.length > this._globalOptions.maxBreadcrumbs) {\n      this._breadcrumbs.shift();\n    }\n    return this;\n  },\n\n  addPlugin: function(plugin /*arg1, arg2, ... argN*/) {\n    var pluginArgs = [].slice.call(arguments, 1);\n\n    this._plugins.push([plugin, pluginArgs]);\n    if (this._isRavenInstalled) {\n      this._drainPlugins();\n    }\n\n    return this;\n  },\n\n  /*\n     * Set/clear a user to be sent along with the payload.\n     *\n     * @param {object} user An object representing user data [optional]\n     * @return {Raven}\n     */\n  setUserContext: function(user) {\n    // Intentionally do not merge here since that's an unexpected behavior.\n    this._globalContext.user = user;\n\n    return this;\n  },\n\n  /*\n     * Merge extra attributes to be sent along with the payload.\n     *\n     * @param {object} extra An object representing extra data [optional]\n     * @return {Raven}\n     */\n  setExtraContext: function(extra) {\n    this._mergeContext('extra', extra);\n\n    return this;\n  },\n\n  /*\n     * Merge tags to be sent along with the payload.\n     *\n     * @param {object} tags An object representing tags [optional]\n     * @return {Raven}\n     */\n  setTagsContext: function(tags) {\n    this._mergeContext('tags', tags);\n\n    return this;\n  },\n\n  /*\n     * Clear all of the context.\n     *\n     * @return {Raven}\n     */\n  clearContext: function() {\n    this._globalContext = {};\n\n    return this;\n  },\n\n  /*\n     * Get a copy of the current context. This cannot be mutated.\n     *\n     * @return {object} copy of context\n     */\n  getContext: function() {\n    // lol javascript\n    return JSON.parse(stringify(this._globalContext));\n  },\n\n  /*\n     * Set environment of application\n     *\n     * @param {string} environment Typically something like 'production'.\n     * @return {Raven}\n     */\n  setEnvironment: function(environment) {\n    this._globalOptions.environment = environment;\n\n    return this;\n  },\n\n  /*\n     * Set release version of application\n     *\n     * @param {string} release Typically something like a git SHA to identify version\n     * @return {Raven}\n     */\n  setRelease: function(release) {\n    this._globalOptions.release = release;\n\n    return this;\n  },\n\n  /*\n     * Set the dataCallback option\n     *\n     * @param {function} callback The callback to run which allows the\n     *                            data blob to be mutated before sending\n     * @return {Raven}\n     */\n  setDataCallback: function(callback) {\n    var original = this._globalOptions.dataCallback;\n    this._globalOptions.dataCallback = keepOriginalCallback(original, callback);\n    return this;\n  },\n\n  /*\n     * Set the breadcrumbCallback option\n     *\n     * @param {function} callback The callback to run which allows filtering\n     *                            or mutating breadcrumbs\n     * @return {Raven}\n     */\n  setBreadcrumbCallback: function(callback) {\n    var original = this._globalOptions.breadcrumbCallback;\n    this._globalOptions.breadcrumbCallback = keepOriginalCallback(original, callback);\n    return this;\n  },\n\n  /*\n     * Set the shouldSendCallback option\n     *\n     * @param {function} callback The callback to run which allows\n     *                            introspecting the blob before sending\n     * @return {Raven}\n     */\n  setShouldSendCallback: function(callback) {\n    var original = this._globalOptions.shouldSendCallback;\n    this._globalOptions.shouldSendCallback = keepOriginalCallback(original, callback);\n    return this;\n  },\n\n  /**\n   * Override the default HTTP transport mechanism that transmits data\n   * to the Sentry server.\n   *\n   * @param {function} transport Function invoked instead of the default\n   *                             `makeRequest` handler.\n   *\n   * @return {Raven}\n   */\n  setTransport: function(transport) {\n    this._globalOptions.transport = transport;\n\n    return this;\n  },\n\n  /*\n     * Get the latest raw exception that was captured by Raven.\n     *\n     * @return {error}\n     */\n  lastException: function() {\n    return this._lastCapturedException;\n  },\n\n  /*\n     * Get the last event id\n     *\n     * @return {string}\n     */\n  lastEventId: function() {\n    return this._lastEventId;\n  },\n\n  /*\n     * Determine if Raven is setup and ready to go.\n     *\n     * @return {boolean}\n     */\n  isSetup: function() {\n    if (!this._hasJSON) return false; // needs JSON support\n    if (!this._globalServer) {\n      if (!this.ravenNotConfiguredError) {\n        this.ravenNotConfiguredError = true;\n        this._logDebug('error', 'Error: Raven has not been configured.');\n      }\n      return false;\n    }\n    return true;\n  },\n\n  afterLoad: function() {\n    // TODO: remove window dependence?\n\n    // Attempt to initialize Raven on load\n    var RavenConfig = _window.RavenConfig;\n    if (RavenConfig) {\n      this.config(RavenConfig.dsn, RavenConfig.config).install();\n    }\n  },\n\n  showReportDialog: function(options) {\n    if (\n      !_document // doesn't work without a document (React native)\n    )\n      return;\n\n    options = Object.assign(\n      {\n        eventId: this.lastEventId(),\n        dsn: this._dsn,\n        user: this._globalContext.user || {}\n      },\n      options\n    );\n\n    if (!options.eventId) {\n      throw new RavenConfigError('Missing eventId');\n    }\n\n    if (!options.dsn) {\n      throw new RavenConfigError('Missing DSN');\n    }\n\n    var encode = encodeURIComponent;\n    var encodedOptions = [];\n\n    for (var key in options) {\n      if (key === 'user') {\n        var user = options.user;\n        if (user.name) encodedOptions.push('name=' + encode(user.name));\n        if (user.email) encodedOptions.push('email=' + encode(user.email));\n      } else {\n        encodedOptions.push(encode(key) + '=' + encode(options[key]));\n      }\n    }\n    var globalServer = this._getGlobalServer(this._parseDSN(options.dsn));\n\n    var script = _document.createElement('script');\n    script.async = true;\n    script.src = globalServer + '/api/embed/error-page/?' + encodedOptions.join('&');\n    (_document.head || _document.body).appendChild(script);\n  },\n\n  /**** Private functions ****/\n  _ignoreNextOnError: function() {\n    var self = this;\n    this._ignoreOnError += 1;\n    setTimeout(function() {\n      // onerror should trigger before setTimeout\n      self._ignoreOnError -= 1;\n    });\n  },\n\n  _triggerEvent: function(eventType, options) {\n    // NOTE: `event` is a native browser thing, so let's avoid conflicting wiht it\n    var evt, key;\n\n    if (!this._hasDocument) return;\n\n    options = options || {};\n\n    eventType = 'raven' + eventType.substr(0, 1).toUpperCase() + eventType.substr(1);\n\n    if (_document.createEvent) {\n      evt = _document.createEvent('HTMLEvents');\n      evt.initEvent(eventType, true, true);\n    } else {\n      evt = _document.createEventObject();\n      evt.eventType = eventType;\n    }\n\n    for (key in options)\n      if (hasKey(options, key)) {\n        evt[key] = options[key];\n      }\n\n    if (_document.createEvent) {\n      // IE9 if standards\n      _document.dispatchEvent(evt);\n    } else {\n      // IE8 regardless of Quirks or Standards\n      // IE9 if quirks\n      try {\n        _document.fireEvent('on' + evt.eventType.toLowerCase(), evt);\n      } catch (e) {\n        // Do nothing\n      }\n    }\n  },\n\n  /**\n   * Wraps addEventListener to capture UI breadcrumbs\n   * @param evtName the event name (e.g. \"click\")\n   * @returns {Function}\n   * @private\n   */\n  _breadcrumbEventHandler: function(evtName) {\n    var self = this;\n    return function(evt) {\n      // reset keypress timeout; e.g. triggering a 'click' after\n      // a 'keypress' will reset the keypress debounce so that a new\n      // set of keypresses can be recorded\n      self._keypressTimeout = null;\n\n      // It's possible this handler might trigger multiple times for the same\n      // event (e.g. event propagation through node ancestors). Ignore if we've\n      // already captured the event.\n      if (self._lastCapturedEvent === evt) return;\n\n      self._lastCapturedEvent = evt;\n\n      // try/catch both:\n      // - accessing evt.target (see getsentry/raven-js#838, #768)\n      // - `htmlTreeAsString` because it's complex, and just accessing the DOM incorrectly\n      //   can throw an exception in some circumstances.\n      var target;\n      try {\n        target = htmlTreeAsString(evt.target);\n      } catch (e) {\n        target = '<unknown>';\n      }\n\n      self.captureBreadcrumb({\n        category: 'ui.' + evtName, // e.g. ui.click, ui.input\n        message: target\n      });\n    };\n  },\n\n  /**\n   * Wraps addEventListener to capture keypress UI events\n   * @returns {Function}\n   * @private\n   */\n  _keypressEventHandler: function() {\n    var self = this,\n      debounceDuration = 1000; // milliseconds\n\n    // TODO: if somehow user switches keypress target before\n    //       debounce timeout is triggered, we will only capture\n    //       a single breadcrumb from the FIRST target (acceptable?)\n    return function(evt) {\n      var target;\n      try {\n        target = evt.target;\n      } catch (e) {\n        // just accessing event properties can throw an exception in some rare circumstances\n        // see: https://github.com/getsentry/raven-js/issues/838\n        return;\n      }\n      var tagName = target && target.tagName;\n\n      // only consider keypress events on actual input elements\n      // this will disregard keypresses targeting body (e.g. tabbing\n      // through elements, hotkeys, etc)\n      if (\n        !tagName ||\n        (tagName !== 'INPUT' && tagName !== 'TEXTAREA' && !target.isContentEditable)\n      )\n        return;\n\n      // record first keypress in a series, but ignore subsequent\n      // keypresses until debounce clears\n      var timeout = self._keypressTimeout;\n      if (!timeout) {\n        self._breadcrumbEventHandler('input')(evt);\n      }\n      clearTimeout(timeout);\n      self._keypressTimeout = setTimeout(function() {\n        self._keypressTimeout = null;\n      }, debounceDuration);\n    };\n  },\n\n  /**\n   * Captures a breadcrumb of type \"navigation\", normalizing input URLs\n   * @param to the originating URL\n   * @param from the target URL\n   * @private\n   */\n  _captureUrlChange: function(from, to) {\n    var parsedLoc = parseUrl(this._location.href);\n    var parsedTo = parseUrl(to);\n    var parsedFrom = parseUrl(from);\n\n    // because onpopstate only tells you the \"new\" (to) value of location.href, and\n    // not the previous (from) value, we need to track the value of the current URL\n    // state ourselves\n    this._lastHref = to;\n\n    // Use only the path component of the URL if the URL matches the current\n    // document (almost all the time when using pushState)\n    if (parsedLoc.protocol === parsedTo.protocol && parsedLoc.host === parsedTo.host)\n      to = parsedTo.relative;\n    if (parsedLoc.protocol === parsedFrom.protocol && parsedLoc.host === parsedFrom.host)\n      from = parsedFrom.relative;\n\n    this.captureBreadcrumb({\n      category: 'navigation',\n      data: {\n        to: to,\n        from: from\n      }\n    });\n  },\n\n  _patchFunctionToString: function() {\n    var self = this;\n    self._originalFunctionToString = Function.prototype.toString;\n    // eslint-disable-next-line no-extend-native\n    Function.prototype.toString = function() {\n      if (typeof this === 'function' && this.__raven__) {\n        return self._originalFunctionToString.apply(this.__orig__, arguments);\n      }\n      return self._originalFunctionToString.apply(this, arguments);\n    };\n  },\n\n  _unpatchFunctionToString: function() {\n    if (this._originalFunctionToString) {\n      // eslint-disable-next-line no-extend-native\n      Function.prototype.toString = this._originalFunctionToString;\n    }\n  },\n\n  /**\n   * Wrap timer functions and event targets to catch errors and provide\n   * better metadata.\n   */\n  _instrumentTryCatch: function() {\n    var self = this;\n\n    var wrappedBuiltIns = self._wrappedBuiltIns;\n\n    function wrapTimeFn(orig) {\n      return function(fn, t) {\n        // preserve arity\n        // Make a copy of the arguments to prevent deoptimization\n        // https://github.com/petkaantonov/bluebird/wiki/Optimization-killers#32-leaking-arguments\n        var args = new Array(arguments.length);\n        for (var i = 0; i < args.length; ++i) {\n          args[i] = arguments[i];\n        }\n        var originalCallback = args[0];\n        if (isFunction(originalCallback)) {\n          args[0] = self.wrap(\n            {\n              mechanism: {\n                type: 'instrument',\n                data: {function: orig.name || '<anonymous>'}\n              }\n            },\n            originalCallback\n          );\n        }\n\n        // IE < 9 doesn't support .call/.apply on setInterval/setTimeout, but it\n        // also supports only two arguments and doesn't care what this is, so we\n        // can just call the original function directly.\n        if (orig.apply) {\n          return orig.apply(this, args);\n        } else {\n          return orig(args[0], args[1]);\n        }\n      };\n    }\n\n    var autoBreadcrumbs = this._globalOptions.autoBreadcrumbs;\n\n    function wrapEventTarget(global) {\n      var proto = _window[global] && _window[global].prototype;\n      if (proto && proto.hasOwnProperty && proto.hasOwnProperty('addEventListener')) {\n        fill(\n          proto,\n          'addEventListener',\n          function(orig) {\n            return function(evtName, fn, capture, secure) {\n              // preserve arity\n              try {\n                if (fn && fn.handleEvent) {\n                  fn.handleEvent = self.wrap(\n                    {\n                      mechanism: {\n                        type: 'instrument',\n                        data: {\n                          target: global,\n                          function: 'handleEvent',\n                          handler: (fn && fn.name) || '<anonymous>'\n                        }\n                      }\n                    },\n                    fn.handleEvent\n                  );\n                }\n              } catch (err) {\n                // can sometimes get 'Permission denied to access property \"handle Event'\n              }\n\n              // More breadcrumb DOM capture ... done here and not in `_instrumentBreadcrumbs`\n              // so that we don't have more than one wrapper function\n              var before, clickHandler, keypressHandler;\n\n              if (\n                autoBreadcrumbs &&\n                autoBreadcrumbs.dom &&\n                (global === 'EventTarget' || global === 'Node')\n              ) {\n                // NOTE: generating multiple handlers per addEventListener invocation, should\n                //       revisit and verify we can just use one (almost certainly)\n                clickHandler = self._breadcrumbEventHandler('click');\n                keypressHandler = self._keypressEventHandler();\n                before = function(evt) {\n                  // need to intercept every DOM event in `before` argument, in case that\n                  // same wrapped method is re-used for different events (e.g. mousemove THEN click)\n                  // see #724\n                  if (!evt) return;\n\n                  var eventType;\n                  try {\n                    eventType = evt.type;\n                  } catch (e) {\n                    // just accessing event properties can throw an exception in some rare circumstances\n                    // see: https://github.com/getsentry/raven-js/issues/838\n                    return;\n                  }\n                  if (eventType === 'click') return clickHandler(evt);\n                  else if (eventType === 'keypress') return keypressHandler(evt);\n                };\n              }\n              return orig.call(\n                this,\n                evtName,\n                self.wrap(\n                  {\n                    mechanism: {\n                      type: 'instrument',\n                      data: {\n                        target: global,\n                        function: 'addEventListener',\n                        handler: (fn && fn.name) || '<anonymous>'\n                      }\n                    }\n                  },\n                  fn,\n                  before\n                ),\n                capture,\n                secure\n              );\n            };\n          },\n          wrappedBuiltIns\n        );\n        fill(\n          proto,\n          'removeEventListener',\n          function(orig) {\n            return function(evt, fn, capture, secure) {\n              try {\n                fn = fn && (fn.__raven_wrapper__ ? fn.__raven_wrapper__ : fn);\n              } catch (e) {\n                // ignore, accessing __raven_wrapper__ will throw in some Selenium environments\n              }\n              return orig.call(this, evt, fn, capture, secure);\n            };\n          },\n          wrappedBuiltIns\n        );\n      }\n    }\n\n    fill(_window, 'setTimeout', wrapTimeFn, wrappedBuiltIns);\n    fill(_window, 'setInterval', wrapTimeFn, wrappedBuiltIns);\n    if (_window.requestAnimationFrame) {\n      fill(\n        _window,\n        'requestAnimationFrame',\n        function(orig) {\n          return function(cb) {\n            return orig(\n              self.wrap(\n                {\n                  mechanism: {\n                    type: 'instrument',\n                    data: {\n                      function: 'requestAnimationFrame',\n                      handler: (orig && orig.name) || '<anonymous>'\n                    }\n                  }\n                },\n                cb\n              )\n            );\n          };\n        },\n        wrappedBuiltIns\n      );\n    }\n\n    // event targets borrowed from bugsnag-js:\n    // https://github.com/bugsnag/bugsnag-js/blob/master/src/bugsnag.js#L666\n    var eventTargets = [\n      'EventTarget',\n      'Window',\n      'Node',\n      'ApplicationCache',\n      'AudioTrackList',\n      'ChannelMergerNode',\n      'CryptoOperation',\n      'EventSource',\n      'FileReader',\n      'HTMLUnknownElement',\n      'IDBDatabase',\n      'IDBRequest',\n      'IDBTransaction',\n      'KeyOperation',\n      'MediaController',\n      'MessagePort',\n      'ModalWindow',\n      'Notification',\n      'SVGElementInstance',\n      'Screen',\n      'TextTrack',\n      'TextTrackCue',\n      'TextTrackList',\n      'WebSocket',\n      'WebSocketWorker',\n      'Worker',\n      'XMLHttpRequest',\n      'XMLHttpRequestEventTarget',\n      'XMLHttpRequestUpload'\n    ];\n    for (var i = 0; i < eventTargets.length; i++) {\n      wrapEventTarget(eventTargets[i]);\n    }\n  },\n\n  /**\n   * Instrument browser built-ins w/ breadcrumb capturing\n   *  - XMLHttpRequests\n   *  - DOM interactions (click/typing)\n   *  - window.location changes\n   *  - console\n   *\n   * Can be disabled or individually configured via the `autoBreadcrumbs` config option\n   */\n  _instrumentBreadcrumbs: function() {\n    var self = this;\n    var autoBreadcrumbs = this._globalOptions.autoBreadcrumbs;\n\n    var wrappedBuiltIns = self._wrappedBuiltIns;\n\n    function wrapProp(prop, xhr) {\n      if (prop in xhr && isFunction(xhr[prop])) {\n        fill(xhr, prop, function(orig) {\n          return self.wrap(\n            {\n              mechanism: {\n                type: 'instrument',\n                data: {function: prop, handler: (orig && orig.name) || '<anonymous>'}\n              }\n            },\n            orig\n          );\n        }); // intentionally don't track filled methods on XHR instances\n      }\n    }\n\n    if (autoBreadcrumbs.xhr && 'XMLHttpRequest' in _window) {\n      var xhrproto = _window.XMLHttpRequest && _window.XMLHttpRequest.prototype;\n      fill(\n        xhrproto,\n        'open',\n        function(origOpen) {\n          return function(method, url) {\n            // preserve arity\n\n            // if Sentry key appears in URL, don't capture\n            if (isString(url) && url.indexOf(self._globalKey) === -1) {\n              this.__raven_xhr = {\n                method: method,\n                url: url,\n                status_code: null\n              };\n            }\n\n            return origOpen.apply(this, arguments);\n          };\n        },\n        wrappedBuiltIns\n      );\n\n      fill(\n        xhrproto,\n        'send',\n        function(origSend) {\n          return function() {\n            // preserve arity\n            var xhr = this;\n\n            function onreadystatechangeHandler() {\n              if (xhr.__raven_xhr && xhr.readyState === 4) {\n                try {\n                  // touching statusCode in some platforms throws\n                  // an exception\n                  xhr.__raven_xhr.status_code = xhr.status;\n                } catch (e) {\n                  /* do nothing */\n                }\n\n                self.captureBreadcrumb({\n                  type: 'http',\n                  category: 'xhr',\n                  data: xhr.__raven_xhr\n                });\n              }\n            }\n\n            var props = ['onload', 'onerror', 'onprogress'];\n            for (var j = 0; j < props.length; j++) {\n              wrapProp(props[j], xhr);\n            }\n\n            if ('onreadystatechange' in xhr && isFunction(xhr.onreadystatechange)) {\n              fill(\n                xhr,\n                'onreadystatechange',\n                function(orig) {\n                  return self.wrap(\n                    {\n                      mechanism: {\n                        type: 'instrument',\n                        data: {\n                          function: 'onreadystatechange',\n                          handler: (orig && orig.name) || '<anonymous>'\n                        }\n                      }\n                    },\n                    orig,\n                    onreadystatechangeHandler\n                  );\n                } /* intentionally don't track this instrumentation */\n              );\n            } else {\n              // if onreadystatechange wasn't actually set by the page on this xhr, we\n              // are free to set our own and capture the breadcrumb\n              xhr.onreadystatechange = onreadystatechangeHandler;\n            }\n\n            return origSend.apply(this, arguments);\n          };\n        },\n        wrappedBuiltIns\n      );\n    }\n\n    if (autoBreadcrumbs.xhr && supportsFetch()) {\n      fill(\n        _window,\n        'fetch',\n        function(origFetch) {\n          return function() {\n            // preserve arity\n            // Make a copy of the arguments to prevent deoptimization\n            // https://github.com/petkaantonov/bluebird/wiki/Optimization-killers#32-leaking-arguments\n            var args = new Array(arguments.length);\n            for (var i = 0; i < args.length; ++i) {\n              args[i] = arguments[i];\n            }\n\n            var fetchInput = args[0];\n            var method = 'GET';\n            var url;\n\n            if (typeof fetchInput === 'string') {\n              url = fetchInput;\n            } else if ('Request' in _window && fetchInput instanceof _window.Request) {\n              url = fetchInput.url;\n              if (fetchInput.method) {\n                method = fetchInput.method;\n              }\n            } else {\n              url = '' + fetchInput;\n            }\n\n            // if Sentry key appears in URL, don't capture, as it's our own request\n            if (url.indexOf(self._globalKey) !== -1) {\n              return origFetch.apply(this, args);\n            }\n\n            if (args[1] && args[1].method) {\n              method = args[1].method;\n            }\n\n            var fetchData = {\n              method: method,\n              url: url,\n              status_code: null\n            };\n\n            return origFetch\n              .apply(this, args)\n              .then(function(response) {\n                fetchData.status_code = response.status;\n\n                self.captureBreadcrumb({\n                  type: 'http',\n                  category: 'fetch',\n                  data: fetchData\n                });\n\n                return response;\n              })\n              ['catch'](function(err) {\n                // if there is an error performing the request\n                self.captureBreadcrumb({\n                  type: 'http',\n                  category: 'fetch',\n                  data: fetchData,\n                  level: 'error'\n                });\n\n                throw err;\n              });\n          };\n        },\n        wrappedBuiltIns\n      );\n    }\n\n    // Capture breadcrumbs from any click that is unhandled / bubbled up all the way\n    // to the document. Do this before we instrument addEventListener.\n    if (autoBreadcrumbs.dom && this._hasDocument) {\n      if (_document.addEventListener) {\n        _document.addEventListener('click', self._breadcrumbEventHandler('click'), false);\n        _document.addEventListener('keypress', self._keypressEventHandler(), false);\n      } else if (_document.attachEvent) {\n        // IE8 Compatibility\n        _document.attachEvent('onclick', self._breadcrumbEventHandler('click'));\n        _document.attachEvent('onkeypress', self._keypressEventHandler());\n      }\n    }\n\n    // record navigation (URL) changes\n    // NOTE: in Chrome App environment, touching history.pushState, *even inside\n    //       a try/catch block*, will cause Chrome to output an error to console.error\n    // borrowed from: https://github.com/angular/angular.js/pull/13945/files\n    var chrome = _window.chrome;\n    var isChromePackagedApp = chrome && chrome.app && chrome.app.runtime;\n    var hasPushAndReplaceState =\n      !isChromePackagedApp &&\n      _window.history &&\n      _window.history.pushState &&\n      _window.history.replaceState;\n    if (autoBreadcrumbs.location && hasPushAndReplaceState) {\n      // TODO: remove onpopstate handler on uninstall()\n      var oldOnPopState = _window.onpopstate;\n      _window.onpopstate = function() {\n        var currentHref = self._location.href;\n        self._captureUrlChange(self._lastHref, currentHref);\n\n        if (oldOnPopState) {\n          return oldOnPopState.apply(this, arguments);\n        }\n      };\n\n      var historyReplacementFunction = function(origHistFunction) {\n        // note history.pushState.length is 0; intentionally not declaring\n        // params to preserve 0 arity\n        return function(/* state, title, url */) {\n          var url = arguments.length > 2 ? arguments[2] : undefined;\n\n          // url argument is optional\n          if (url) {\n            // coerce to string (this is what pushState does)\n            self._captureUrlChange(self._lastHref, url + '');\n          }\n\n          return origHistFunction.apply(this, arguments);\n        };\n      };\n\n      fill(_window.history, 'pushState', historyReplacementFunction, wrappedBuiltIns);\n      fill(_window.history, 'replaceState', historyReplacementFunction, wrappedBuiltIns);\n    }\n\n    if (autoBreadcrumbs.console && 'console' in _window && console.log) {\n      // console\n      var consoleMethodCallback = function(msg, data) {\n        self.captureBreadcrumb({\n          message: msg,\n          level: data.level,\n          category: 'console'\n        });\n      };\n\n      each(['debug', 'info', 'warn', 'error', 'log'], function(_, level) {\n        wrapConsoleMethod(console, level, consoleMethodCallback);\n      });\n    }\n  },\n\n  _restoreBuiltIns: function() {\n    // restore any wrapped builtins\n    var builtin;\n    while (this._wrappedBuiltIns.length) {\n      builtin = this._wrappedBuiltIns.shift();\n\n      var obj = builtin[0],\n        name = builtin[1],\n        orig = builtin[2];\n\n      obj[name] = orig;\n    }\n  },\n\n  _restoreConsole: function() {\n    // eslint-disable-next-line guard-for-in\n    for (var method in this._originalConsoleMethods) {\n      this._originalConsole[method] = this._originalConsoleMethods[method];\n    }\n  },\n\n  _drainPlugins: function() {\n    var self = this;\n\n    // FIX ME TODO\n    each(this._plugins, function(_, plugin) {\n      var installer = plugin[0];\n      var args = plugin[1];\n      installer.apply(self, [self].concat(args));\n    });\n  },\n\n  _parseDSN: function(str) {\n    var m = dsnPattern.exec(str),\n      dsn = {},\n      i = 7;\n\n    try {\n      while (i--) dsn[dsnKeys[i]] = m[i] || '';\n    } catch (e) {\n      throw new RavenConfigError('Invalid DSN: ' + str);\n    }\n\n    if (dsn.pass && !this._globalOptions.allowSecretKey) {\n      throw new RavenConfigError(\n        'Do not specify your secret key in the DSN. See: http://bit.ly/raven-secret-key'\n      );\n    }\n\n    return dsn;\n  },\n\n  _getGlobalServer: function(uri) {\n    // assemble the endpoint from the uri pieces\n    var globalServer = '//' + uri.host + (uri.port ? ':' + uri.port : '');\n\n    if (uri.protocol) {\n      globalServer = uri.protocol + ':' + globalServer;\n    }\n    return globalServer;\n  },\n\n  _handleOnErrorStackInfo: function(stackInfo, options) {\n    options = options || {};\n    options.mechanism = options.mechanism || {\n      type: 'onerror',\n      handled: false\n    };\n\n    // if we are intentionally ignoring errors via onerror, bail out\n    if (!this._ignoreOnError) {\n      this._handleStackInfo(stackInfo, options);\n    }\n  },\n\n  _handleStackInfo: function(stackInfo, options) {\n    var frames = this._prepareFrames(stackInfo, options);\n\n    this._triggerEvent('handle', {\n      stackInfo: stackInfo,\n      options: options\n    });\n\n    this._processException(\n      stackInfo.name,\n      stackInfo.message,\n      stackInfo.url,\n      stackInfo.lineno,\n      frames,\n      options\n    );\n  },\n\n  _prepareFrames: function(stackInfo, options) {\n    var self = this;\n    var frames = [];\n    if (stackInfo.stack && stackInfo.stack.length) {\n      each(stackInfo.stack, function(i, stack) {\n        var frame = self._normalizeFrame(stack, stackInfo.url);\n        if (frame) {\n          frames.push(frame);\n        }\n      });\n\n      // e.g. frames captured via captureMessage throw\n      if (options && options.trimHeadFrames) {\n        for (var j = 0; j < options.trimHeadFrames && j < frames.length; j++) {\n          frames[j].in_app = false;\n        }\n      }\n    }\n    frames = frames.slice(0, this._globalOptions.stackTraceLimit);\n    return frames;\n  },\n\n  _normalizeFrame: function(frame, stackInfoUrl) {\n    // normalize the frames data\n    var normalized = {\n      filename: frame.url,\n      lineno: frame.line,\n      colno: frame.column,\n      function: frame.func || '?'\n    };\n\n    // Case when we don't have any information about the error\n    // E.g. throwing a string or raw object, instead of an `Error` in Firefox\n    // Generating synthetic error doesn't add any value here\n    //\n    // We should probably somehow let a user know that they should fix their code\n    if (!frame.url) {\n      normalized.filename = stackInfoUrl; // fallback to whole stacks url from onerror handler\n    }\n\n    normalized.in_app = !// determine if an exception came from outside of our app\n    // first we check the global includePaths list.\n    (\n      (!!this._globalOptions.includePaths.test &&\n        !this._globalOptions.includePaths.test(normalized.filename)) ||\n      // Now we check for fun, if the function name is Raven or TraceKit\n      /(Raven|TraceKit)\\./.test(normalized['function']) ||\n      // finally, we do a last ditch effort and check for raven.min.js\n      /raven\\.(min\\.)?js$/.test(normalized.filename)\n    );\n\n    return normalized;\n  },\n\n  _processException: function(type, message, fileurl, lineno, frames, options) {\n    var prefixedMessage = (type ? type + ': ' : '') + (message || '');\n    if (\n      !!this._globalOptions.ignoreErrors.test &&\n      (this._globalOptions.ignoreErrors.test(message) ||\n        this._globalOptions.ignoreErrors.test(prefixedMessage))\n    ) {\n      return;\n    }\n\n    var stacktrace;\n\n    if (frames && frames.length) {\n      fileurl = frames[0].filename || fileurl;\n      // Sentry expects frames oldest to newest\n      // and JS sends them as newest to oldest\n      frames.reverse();\n      stacktrace = {frames: frames};\n    } else if (fileurl) {\n      stacktrace = {\n        frames: [\n          {\n            filename: fileurl,\n            lineno: lineno,\n            in_app: true\n          }\n        ]\n      };\n    }\n\n    if (\n      !!this._globalOptions.ignoreUrls.test &&\n      this._globalOptions.ignoreUrls.test(fileurl)\n    ) {\n      return;\n    }\n\n    if (\n      !!this._globalOptions.whitelistUrls.test &&\n      !this._globalOptions.whitelistUrls.test(fileurl)\n    ) {\n      return;\n    }\n\n    var data = objectMerge(\n      {\n        // sentry.interfaces.Exception\n        exception: {\n          values: [\n            {\n              type: type,\n              value: message,\n              stacktrace: stacktrace\n            }\n          ]\n        },\n        transaction: fileurl\n      },\n      options\n    );\n\n    var ex = data.exception.values[0];\n    if (ex.type == null && ex.value === '') {\n      ex.value = 'Unrecoverable error caught';\n    }\n\n    // Move mechanism from options to exception interface\n    // We do this, as requiring user to pass `{exception:{mechanism:{ ... }}}` would be\n    // too much\n    if (!data.exception.mechanism && data.mechanism) {\n      data.exception.mechanism = data.mechanism;\n      delete data.mechanism;\n    }\n\n    data.exception.mechanism = objectMerge(\n      {\n        type: 'generic',\n        handled: true\n      },\n      data.exception.mechanism || {}\n    );\n\n    // Fire away!\n    this._send(data);\n  },\n\n  _trimPacket: function(data) {\n    // For now, we only want to truncate the two different messages\n    // but this could/should be expanded to just trim everything\n    var max = this._globalOptions.maxMessageLength;\n    if (data.message) {\n      data.message = truncate(data.message, max);\n    }\n    if (data.exception) {\n      var exception = data.exception.values[0];\n      exception.value = truncate(exception.value, max);\n    }\n\n    var request = data.request;\n    if (request) {\n      if (request.url) {\n        request.url = truncate(request.url, this._globalOptions.maxUrlLength);\n      }\n      if (request.Referer) {\n        request.Referer = truncate(request.Referer, this._globalOptions.maxUrlLength);\n      }\n    }\n\n    if (data.breadcrumbs && data.breadcrumbs.values)\n      this._trimBreadcrumbs(data.breadcrumbs);\n\n    return data;\n  },\n\n  /**\n   * Truncate breadcrumb values (right now just URLs)\n   */\n  _trimBreadcrumbs: function(breadcrumbs) {\n    // known breadcrumb properties with urls\n    // TODO: also consider arbitrary prop values that start with (https?)?://\n    var urlProps = ['to', 'from', 'url'],\n      urlProp,\n      crumb,\n      data;\n\n    for (var i = 0; i < breadcrumbs.values.length; ++i) {\n      crumb = breadcrumbs.values[i];\n      if (\n        !crumb.hasOwnProperty('data') ||\n        !isObject(crumb.data) ||\n        objectFrozen(crumb.data)\n      )\n        continue;\n\n      data = objectMerge({}, crumb.data);\n      for (var j = 0; j < urlProps.length; ++j) {\n        urlProp = urlProps[j];\n        if (data.hasOwnProperty(urlProp) && data[urlProp]) {\n          data[urlProp] = truncate(data[urlProp], this._globalOptions.maxUrlLength);\n        }\n      }\n      breadcrumbs.values[i].data = data;\n    }\n  },\n\n  _getHttpData: function() {\n    if (!this._hasNavigator && !this._hasDocument) return;\n    var httpData = {};\n\n    if (this._hasNavigator && _navigator.userAgent) {\n      httpData.headers = {\n        'User-Agent': _navigator.userAgent\n      };\n    }\n\n    // Check in `window` instead of `document`, as we may be in ServiceWorker environment\n    if (_window.location && _window.location.href) {\n      httpData.url = _window.location.href;\n    }\n\n    if (this._hasDocument && _document.referrer) {\n      if (!httpData.headers) httpData.headers = {};\n      httpData.headers.Referer = _document.referrer;\n    }\n\n    return httpData;\n  },\n\n  _resetBackoff: function() {\n    this._backoffDuration = 0;\n    this._backoffStart = null;\n  },\n\n  _shouldBackoff: function() {\n    return this._backoffDuration && now() - this._backoffStart < this._backoffDuration;\n  },\n\n  /**\n   * Returns true if the in-process data payload matches the signature\n   * of the previously-sent data\n   *\n   * NOTE: This has to be done at this level because TraceKit can generate\n   *       data from window.onerror WITHOUT an exception object (IE8, IE9,\n   *       other old browsers). This can take the form of an \"exception\"\n   *       data object with a single frame (derived from the onerror args).\n   */\n  _isRepeatData: function(current) {\n    var last = this._lastData;\n\n    if (\n      !last ||\n      current.message !== last.message || // defined for captureMessage\n      current.transaction !== last.transaction // defined for captureException/onerror\n    )\n      return false;\n\n    // Stacktrace interface (i.e. from captureMessage)\n    if (current.stacktrace || last.stacktrace) {\n      return isSameStacktrace(current.stacktrace, last.stacktrace);\n    } else if (current.exception || last.exception) {\n      // Exception interface (i.e. from captureException/onerror)\n      return isSameException(current.exception, last.exception);\n    }\n\n    return true;\n  },\n\n  _setBackoffState: function(request) {\n    // If we are already in a backoff state, don't change anything\n    if (this._shouldBackoff()) {\n      return;\n    }\n\n    var status = request.status;\n\n    // 400 - project_id doesn't exist or some other fatal\n    // 401 - invalid/revoked dsn\n    // 429 - too many requests\n    if (!(status === 400 || status === 401 || status === 429)) return;\n\n    var retry;\n    try {\n      // If Retry-After is not in Access-Control-Expose-Headers, most\n      // browsers will throw an exception trying to access it\n      if (supportsFetch()) {\n        retry = request.headers.get('Retry-After');\n      } else {\n        retry = request.getResponseHeader('Retry-After');\n      }\n\n      // Retry-After is returned in seconds\n      retry = parseInt(retry, 10) * 1000;\n    } catch (e) {\n      /* eslint no-empty:0 */\n    }\n\n    this._backoffDuration = retry\n      ? // If Sentry server returned a Retry-After value, use it\n        retry\n      : // Otherwise, double the last backoff duration (starts at 1 sec)\n        this._backoffDuration * 2 || 1000;\n\n    this._backoffStart = now();\n  },\n\n  _send: function(data) {\n    var globalOptions = this._globalOptions;\n\n    var baseData = {\n        project: this._globalProject,\n        logger: globalOptions.logger,\n        platform: 'javascript'\n      },\n      httpData = this._getHttpData();\n\n    if (httpData) {\n      baseData.request = httpData;\n    }\n\n    // HACK: delete `trimHeadFrames` to prevent from appearing in outbound payload\n    if (data.trimHeadFrames) delete data.trimHeadFrames;\n\n    data = objectMerge(baseData, data);\n\n    // Merge in the tags and extra separately since objectMerge doesn't handle a deep merge\n    data.tags = objectMerge(objectMerge({}, this._globalContext.tags), data.tags);\n    data.extra = objectMerge(objectMerge({}, this._globalContext.extra), data.extra);\n\n    // Send along our own collected metadata with extra\n    data.extra['session:duration'] = now() - this._startTime;\n\n    if (this._breadcrumbs && this._breadcrumbs.length > 0) {\n      // intentionally make shallow copy so that additions\n      // to breadcrumbs aren't accidentally sent in this request\n      data.breadcrumbs = {\n        values: [].slice.call(this._breadcrumbs, 0)\n      };\n    }\n\n    if (this._globalContext.user) {\n      // sentry.interfaces.User\n      data.user = this._globalContext.user;\n    }\n\n    // Include the environment if it's defined in globalOptions\n    if (globalOptions.environment) data.environment = globalOptions.environment;\n\n    // Include the release if it's defined in globalOptions\n    if (globalOptions.release) data.release = globalOptions.release;\n\n    // Include server_name if it's defined in globalOptions\n    if (globalOptions.serverName) data.server_name = globalOptions.serverName;\n\n    data = this._sanitizeData(data);\n\n    // Cleanup empty properties before sending them to the server\n    Object.keys(data).forEach(function(key) {\n      if (data[key] == null || data[key] === '' || isEmptyObject(data[key])) {\n        delete data[key];\n      }\n    });\n\n    if (isFunction(globalOptions.dataCallback)) {\n      data = globalOptions.dataCallback(data) || data;\n    }\n\n    // Why??????????\n    if (!data || isEmptyObject(data)) {\n      return;\n    }\n\n    // Check if the request should be filtered or not\n    if (\n      isFunction(globalOptions.shouldSendCallback) &&\n      !globalOptions.shouldSendCallback(data)\n    ) {\n      return;\n    }\n\n    // Backoff state: Sentry server previously responded w/ an error (e.g. 429 - too many requests),\n    // so drop requests until \"cool-off\" period has elapsed.\n    if (this._shouldBackoff()) {\n      this._logDebug('warn', 'Raven dropped error due to backoff: ', data);\n      return;\n    }\n\n    if (typeof globalOptions.sampleRate === 'number') {\n      if (Math.random() < globalOptions.sampleRate) {\n        this._sendProcessedPayload(data);\n      }\n    } else {\n      this._sendProcessedPayload(data);\n    }\n  },\n\n  _sanitizeData: function(data) {\n    return sanitize(data, this._globalOptions.sanitizeKeys);\n  },\n\n  _getUuid: function() {\n    return uuid4();\n  },\n\n  _sendProcessedPayload: function(data, callback) {\n    var self = this;\n    var globalOptions = this._globalOptions;\n\n    if (!this.isSetup()) return;\n\n    // Try and clean up the packet before sending by truncating long values\n    data = this._trimPacket(data);\n\n    // ideally duplicate error testing should occur *before* dataCallback/shouldSendCallback,\n    // but this would require copying an un-truncated copy of the data packet, which can be\n    // arbitrarily deep (extra_data) -- could be worthwhile? will revisit\n    if (!this._globalOptions.allowDuplicates && this._isRepeatData(data)) {\n      this._logDebug('warn', 'Raven dropped repeat event: ', data);\n      return;\n    }\n\n    // Send along an event_id if not explicitly passed.\n    // This event_id can be used to reference the error within Sentry itself.\n    // Set lastEventId after we know the error should actually be sent\n    this._lastEventId = data.event_id || (data.event_id = this._getUuid());\n\n    // Store outbound payload after trim\n    this._lastData = data;\n\n    this._logDebug('debug', 'Raven about to send:', data);\n\n    var auth = {\n      sentry_version: '7',\n      sentry_client: 'raven-js/' + this.VERSION,\n      sentry_key: this._globalKey\n    };\n\n    if (this._globalSecret) {\n      auth.sentry_secret = this._globalSecret;\n    }\n\n    var exception = data.exception && data.exception.values[0];\n\n    // only capture 'sentry' breadcrumb is autoBreadcrumbs is truthy\n    if (\n      this._globalOptions.autoBreadcrumbs &&\n      this._globalOptions.autoBreadcrumbs.sentry\n    ) {\n      this.captureBreadcrumb({\n        category: 'sentry',\n        message: exception\n          ? (exception.type ? exception.type + ': ' : '') + exception.value\n          : data.message,\n        event_id: data.event_id,\n        level: data.level || 'error' // presume error unless specified\n      });\n    }\n\n    var url = this._globalEndpoint;\n    (globalOptions.transport || this._makeRequest).call(this, {\n      url: url,\n      auth: auth,\n      data: data,\n      options: globalOptions,\n      onSuccess: function success() {\n        self._resetBackoff();\n\n        self._triggerEvent('success', {\n          data: data,\n          src: url\n        });\n        callback && callback();\n      },\n      onError: function failure(error) {\n        self._logDebug('error', 'Raven transport failed to send: ', error);\n\n        if (error.request) {\n          self._setBackoffState(error.request);\n        }\n\n        self._triggerEvent('failure', {\n          data: data,\n          src: url\n        });\n        error = error || new Error('Raven send failed (no additional details provided)');\n        callback && callback(error);\n      }\n    });\n  },\n\n  _makeRequest: function(opts) {\n    // Auth is intentionally sent as part of query string (NOT as custom HTTP header) to avoid preflight CORS requests\n    var url = opts.url + '?' + urlencode(opts.auth);\n\n    var evaluatedHeaders = null;\n    var evaluatedFetchParameters = {};\n\n    if (opts.options.headers) {\n      evaluatedHeaders = this._evaluateHash(opts.options.headers);\n    }\n\n    if (opts.options.fetchParameters) {\n      evaluatedFetchParameters = this._evaluateHash(opts.options.fetchParameters);\n    }\n\n    if (supportsFetch()) {\n      evaluatedFetchParameters.body = stringify(opts.data);\n\n      var defaultFetchOptions = objectMerge({}, this._fetchDefaults);\n      var fetchOptions = objectMerge(defaultFetchOptions, evaluatedFetchParameters);\n\n      if (evaluatedHeaders) {\n        fetchOptions.headers = evaluatedHeaders;\n      }\n\n      return _window\n        .fetch(url, fetchOptions)\n        .then(function(response) {\n          if (response.ok) {\n            opts.onSuccess && opts.onSuccess();\n          } else {\n            var error = new Error('Sentry error code: ' + response.status);\n            // It's called request only to keep compatibility with XHR interface\n            // and not add more redundant checks in setBackoffState method\n            error.request = response;\n            opts.onError && opts.onError(error);\n          }\n        })\n        ['catch'](function() {\n          opts.onError &&\n            opts.onError(new Error('Sentry error code: network unavailable'));\n        });\n    }\n\n    var request = _window.XMLHttpRequest && new _window.XMLHttpRequest();\n    if (!request) return;\n\n    // if browser doesn't support CORS (e.g. IE7), we are out of luck\n    var hasCORS = 'withCredentials' in request || typeof XDomainRequest !== 'undefined';\n\n    if (!hasCORS) return;\n\n    if ('withCredentials' in request) {\n      request.onreadystatechange = function() {\n        if (request.readyState !== 4) {\n          return;\n        } else if (request.status === 200) {\n          opts.onSuccess && opts.onSuccess();\n        } else if (opts.onError) {\n          var err = new Error('Sentry error code: ' + request.status);\n          err.request = request;\n          opts.onError(err);\n        }\n      };\n    } else {\n      request = new XDomainRequest();\n      // xdomainrequest cannot go http -> https (or vice versa),\n      // so always use protocol relative\n      url = url.replace(/^https?:/, '');\n\n      // onreadystatechange not supported by XDomainRequest\n      if (opts.onSuccess) {\n        request.onload = opts.onSuccess;\n      }\n      if (opts.onError) {\n        request.onerror = function() {\n          var err = new Error('Sentry error code: XDomainRequest');\n          err.request = request;\n          opts.onError(err);\n        };\n      }\n    }\n\n    request.open('POST', url);\n\n    if (evaluatedHeaders) {\n      each(evaluatedHeaders, function(key, value) {\n        request.setRequestHeader(key, value);\n      });\n    }\n\n    request.send(stringify(opts.data));\n  },\n\n  _evaluateHash: function(hash) {\n    var evaluated = {};\n\n    for (var key in hash) {\n      if (hash.hasOwnProperty(key)) {\n        var value = hash[key];\n        evaluated[key] = typeof value === 'function' ? value() : value;\n      }\n    }\n\n    return evaluated;\n  },\n\n  _logDebug: function(level) {\n    // We allow `Raven.debug` and `Raven.config(DSN, { debug: true })` to not make backward incompatible API change\n    if (\n      this._originalConsoleMethods[level] &&\n      (this.debug || this._globalOptions.debug)\n    ) {\n      // In IE<10 console methods do not have their own 'apply' method\n      Function.prototype.apply.call(\n        this._originalConsoleMethods[level],\n        this._originalConsole,\n        [].slice.call(arguments, 1)\n      );\n    }\n  },\n\n  _mergeContext: function(key, context) {\n    if (isUndefined(context)) {\n      delete this._globalContext[key];\n    } else {\n      this._globalContext[key] = objectMerge(this._globalContext[key] || {}, context);\n    }\n  }\n};\n\n// Deprecations\nRaven.prototype.setUser = Raven.prototype.setUserContext;\nRaven.prototype.setReleaseContext = Raven.prototype.setRelease;\n\nmodule.exports = Raven;\n","/* globals __webpack_amd_options__ */\r\nmodule.exports = __webpack_amd_options__;\r\n","module.exports = function() {\r\n\tthrow new Error(\"define cannot be used indirect\");\r\n};\r\n","/* FileSaver.js\n * A saveAs() FileSaver implementation.\n * 1.3.2\n * 2016-06-16 18:25:19\n *\n * By Eli Grey, http://eligrey.com\n * License: MIT\n *   See https://github.com/eligrey/FileSaver.js/blob/master/LICENSE.md\n */\n\n/*global self */\n/*jslint bitwise: true, indent: 4, laxbreak: true, laxcomma: true, smarttabs: true, plusplus: true */\n\n/*! @source http://purl.eligrey.com/github/FileSaver.js/blob/master/FileSaver.js */\n\nvar saveAs = saveAs || (function(view) {\n\t\"use strict\";\n\t// IE <10 is explicitly unsupported\n\tif (typeof view === \"undefined\" || typeof navigator !== \"undefined\" && /MSIE [1-9]\\./.test(navigator.userAgent)) {\n\t\treturn;\n\t}\n\tvar\n\t\t  doc = view.document\n\t\t  // only get URL when necessary in case Blob.js hasn't overridden it yet\n\t\t, get_URL = function() {\n\t\t\treturn view.URL || view.webkitURL || view;\n\t\t}\n\t\t, save_link = doc.createElementNS(\"http://www.w3.org/1999/xhtml\", \"a\")\n\t\t, can_use_save_link = \"download\" in save_link\n\t\t, click = function(node) {\n\t\t\tvar event = new MouseEvent(\"click\");\n\t\t\tnode.dispatchEvent(event);\n\t\t}\n\t\t, is_safari = /constructor/i.test(view.HTMLElement) || view.safari\n\t\t, is_chrome_ios =/CriOS\\/[\\d]+/.test(navigator.userAgent)\n\t\t, throw_outside = function(ex) {\n\t\t\t(view.setImmediate || view.setTimeout)(function() {\n\t\t\t\tthrow ex;\n\t\t\t}, 0);\n\t\t}\n\t\t, force_saveable_type = \"application/octet-stream\"\n\t\t// the Blob API is fundamentally broken as there is no \"downloadfinished\" event to subscribe to\n\t\t, arbitrary_revoke_timeout = 1000 * 40 // in ms\n\t\t, revoke = function(file) {\n\t\t\tvar revoker = function() {\n\t\t\t\tif (typeof file === \"string\") { // file is an object URL\n\t\t\t\t\tget_URL().revokeObjectURL(file);\n\t\t\t\t} else { // file is a File\n\t\t\t\t\tfile.remove();\n\t\t\t\t}\n\t\t\t};\n\t\t\tsetTimeout(revoker, arbitrary_revoke_timeout);\n\t\t}\n\t\t, dispatch = function(filesaver, event_types, event) {\n\t\t\tevent_types = [].concat(event_types);\n\t\t\tvar i = event_types.length;\n\t\t\twhile (i--) {\n\t\t\t\tvar listener = filesaver[\"on\" + event_types[i]];\n\t\t\t\tif (typeof listener === \"function\") {\n\t\t\t\t\ttry {\n\t\t\t\t\t\tlistener.call(filesaver, event || filesaver);\n\t\t\t\t\t} catch (ex) {\n\t\t\t\t\t\tthrow_outside(ex);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t, auto_bom = function(blob) {\n\t\t\t// prepend BOM for UTF-8 XML and text/* types (including HTML)\n\t\t\t// note: your browser will automatically convert UTF-16 U+FEFF to EF BB BF\n\t\t\tif (/^\\s*(?:text\\/\\S*|application\\/xml|\\S*\\/\\S*\\+xml)\\s*;.*charset\\s*=\\s*utf-8/i.test(blob.type)) {\n\t\t\t\treturn new Blob([String.fromCharCode(0xFEFF), blob], {type: blob.type});\n\t\t\t}\n\t\t\treturn blob;\n\t\t}\n\t\t, FileSaver = function(blob, name, no_auto_bom) {\n\t\t\tif (!no_auto_bom) {\n\t\t\t\tblob = auto_bom(blob);\n\t\t\t}\n\t\t\t// First try a.download, then web filesystem, then object URLs\n\t\t\tvar\n\t\t\t\t  filesaver = this\n\t\t\t\t, type = blob.type\n\t\t\t\t, force = type === force_saveable_type\n\t\t\t\t, object_url\n\t\t\t\t, dispatch_all = function() {\n\t\t\t\t\tdispatch(filesaver, \"writestart progress write writeend\".split(\" \"));\n\t\t\t\t}\n\t\t\t\t// on any filesys errors revert to saving with object URLs\n\t\t\t\t, fs_error = function() {\n\t\t\t\t\tif ((is_chrome_ios || (force && is_safari)) && view.FileReader) {\n\t\t\t\t\t\t// Safari doesn't allow downloading of blob urls\n\t\t\t\t\t\tvar reader = new FileReader();\n\t\t\t\t\t\treader.onloadend = function() {\n\t\t\t\t\t\t\tvar url = is_chrome_ios ? reader.result : reader.result.replace(/^data:[^;]*;/, 'data:attachment/file;');\n\t\t\t\t\t\t\tvar popup = view.open(url, '_blank');\n\t\t\t\t\t\t\tif(!popup) view.location.href = url;\n\t\t\t\t\t\t\turl=undefined; // release reference before dispatching\n\t\t\t\t\t\t\tfilesaver.readyState = filesaver.DONE;\n\t\t\t\t\t\t\tdispatch_all();\n\t\t\t\t\t\t};\n\t\t\t\t\t\treader.readAsDataURL(blob);\n\t\t\t\t\t\tfilesaver.readyState = filesaver.INIT;\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\t// don't create more object URLs than needed\n\t\t\t\t\tif (!object_url) {\n\t\t\t\t\t\tobject_url = get_URL().createObjectURL(blob);\n\t\t\t\t\t}\n\t\t\t\t\tif (force) {\n\t\t\t\t\t\tview.location.href = object_url;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tvar opened = view.open(object_url, \"_blank\");\n\t\t\t\t\t\tif (!opened) {\n\t\t\t\t\t\t\t// Apple does not allow window.open, see https://developer.apple.com/library/safari/documentation/Tools/Conceptual/SafariExtensionGuide/WorkingwithWindowsandTabs/WorkingwithWindowsandTabs.html\n\t\t\t\t\t\t\tview.location.href = object_url;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tfilesaver.readyState = filesaver.DONE;\n\t\t\t\t\tdispatch_all();\n\t\t\t\t\trevoke(object_url);\n\t\t\t\t}\n\t\t\t;\n\t\t\tfilesaver.readyState = filesaver.INIT;\n\n\t\t\tif (can_use_save_link) {\n\t\t\t\tobject_url = get_URL().createObjectURL(blob);\n\t\t\t\tsetTimeout(function() {\n\t\t\t\t\tsave_link.href = object_url;\n\t\t\t\t\tsave_link.download = name;\n\t\t\t\t\tclick(save_link);\n\t\t\t\t\tdispatch_all();\n\t\t\t\t\trevoke(object_url);\n\t\t\t\t\tfilesaver.readyState = filesaver.DONE;\n\t\t\t\t});\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tfs_error();\n\t\t}\n\t\t, FS_proto = FileSaver.prototype\n\t\t, saveAs = function(blob, name, no_auto_bom) {\n\t\t\treturn new FileSaver(blob, name || blob.name || \"download\", no_auto_bom);\n\t\t}\n\t;\n\t// IE 10+ (native saveAs)\n\tif (typeof navigator !== \"undefined\" && navigator.msSaveOrOpenBlob) {\n\t\treturn function(blob, name, no_auto_bom) {\n\t\t\tname = name || blob.name || \"download\";\n\n\t\t\tif (!no_auto_bom) {\n\t\t\t\tblob = auto_bom(blob);\n\t\t\t}\n\t\t\treturn navigator.msSaveOrOpenBlob(blob, name);\n\t\t};\n\t}\n\n\tFS_proto.abort = function(){};\n\tFS_proto.readyState = FS_proto.INIT = 0;\n\tFS_proto.WRITING = 1;\n\tFS_proto.DONE = 2;\n\n\tFS_proto.error =\n\tFS_proto.onwritestart =\n\tFS_proto.onprogress =\n\tFS_proto.onwrite =\n\tFS_proto.onabort =\n\tFS_proto.onerror =\n\tFS_proto.onwriteend =\n\t\tnull;\n\n\treturn saveAs;\n}(\n\t   typeof self !== \"undefined\" && self\n\t|| typeof window !== \"undefined\" && window\n\t|| this.content\n));\n// `self` is undefined in Firefox for Android content script context\n// while `this` is nsIContentFrameMessageManager\n// with an attribute `content` that corresponds to the window\n\nif (typeof module !== \"undefined\" && module.exports) {\n  module.exports.saveAs = saveAs;\n} else if ((typeof define !== \"undefined\" && define !== null) && (define.amd !== null)) {\n  define(\"FileSaver.js\", function() {\n    return saveAs;\n  });\n}\n"],"sourceRoot":""}